{"version":3,"sources":["components/authentication/Connect.js","components/authentication/Register.js","components/authentication/Authentication.js","utils/httpMethods.js","components/circuit/CreateCircuitModal.js","components/Navigation.js","components/Pin.js","components/Map.js","components/circuit/CircuitListItem.js","components/circuit/CircuitList.js","views/CircuitsView.js","views/Home.js","views/Account.js","components/step/StepListItem.js","components/step/StepList.js","components/step/QuestionList.js","components/step/MultipleQuestion.js","components/step/UpdateStepModal.js","components/circuit/UpdateCircuitModal.js","views/CircuitPublisher.js","views/Achievement.js","views/Todo.js","views/DetailedCircuit.js","App.js","serviceWorker.js","index.js"],"names":["Connect","state","email","password","handleChange","event","_this$setState","_this","setState","Object","defineProperty","target","name","value","undefined","handleSubmit","e","preventDefault","login","props","catch","error","code","text","console","log","_this$state","this","displayModal","react_default","a","createElement","Form","onSubmit","ModalBody","FormGroup","Label","Input","type","placeholder","onChange","invalid","FormFeedback","ModalFooter","Button","color","onClick","Component","withRouter","Register","firstname","lastname","repeatPassword","concat","match","length","verifpassword","verifrepeatPassword","user","assign","then","data","verifemail","_this$state2","Authentication","modal","registerByDefault","previousState","_this2","_this$props","logout","isConnected","userOptions","menu","Item","Link","to","Fragment","dropdown","overlay","id","className","href","react_fontawesome_index_es","icon","Modal","isOpen","fade","toggle","ModalHeader","authentication_Register","authentication_Connect","React","API_HOST","process","checkStatus","_callee","response","regenerator_default","wrap","_context","prev","next","ok","status","abrupt","Promise","resolve","json","t0","t1","t2","sent","t3","reject","call","stop","request","route","method","body","options","headers","Content-Type","localStorage","getItem","authorization","JSON","stringify","fetch","httpMethods","get","post","put","delete","CreateCircuitModal","api","history","push","id_circuit","Navigation","circuitOptions","Divider","Navbar","expand","fixed","src","alt","Collapse","navbar","Nav","Authentication_Authentication","circuit_CreateCircuitModal","Pin","index","x","pinStyle","cursor","fill","stroke","height","viewBox","style","objectSpread","d","y","fontSize","PureComponent","Map","centerStep","step","viewport","changeViewport","latitude","longitude","zoom","_this$props2","steps","circuits","onClickMap","onClickMarker","userPosition","esm","mapboxApiAccessToken","mapStyle","MAP_STYLE","onViewportChange","offsetLeft","offsetTop","Pin_Pin","map","s","key","id_step","order","c","idx","Steps","CircuitListItem","tooltipPublicationOpen","tooltipLevelOpen","publishedStatusToggler","levelToggler","test","classLevel","description","onHome","duration","version","published","level","overview","replace","substring","Tooltip","placement","autohide","CircuitList","_ref","_ref$items","items","item","circuit_CircuitListItem","CircuitsView","dropdownOpen","filter","onFilterClick","componentDidMount","showPublished","ButtonDropdown","direction","DropdownToggle","caret","DropdownMenu","DropdownItem","element","Home","width","window","innerHeight","distance","getCircuits","_this$state$viewport","user_longitude","user_latitude","onClickItem","navigator","geolocation","getCurrentPosition","coords","_this3","Map_Map","CircuitsView_CircuitsView","lib_default","onToggle","Account","StepListItem","stepFocus","react_beautiful_dnd_esm","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","StepList","droppableId","snapshot","backgroundColor","isDraggingOver","droppableProps","QuestionList","activeTab","handleChangeQuestion","wording","TabContent","TabPane","tabId","Row","Col","sm","MultipleQuestion","tab","Questions","tabs","NavItem","NavLink","classnames","active","QuestionList_QuestionList","UpdateStepModal","instruction","validation","modules","toolbar","header","list","indent","formats","handleRichTextChange","_event$target","prevState","handleCheckboxChange","checked","displayUpdateStep","updateStep","alert","success","prevProps","type_of","points","difficulty","show","removeStep","react_quill_lib_default","theme","es_checkbox","MultipleQuestion_MultipleQuestion","withAlert","UpdateCircuitModal","displayUpdateCircuit","updateCircuit","circuit","CircuitPublisher","circuitIsDisplayed","stepIsDisplayed","document","getElementById","scrollIntoView","behavior","block","inline","handleClickMap","lngLat","findIndex","splice","forEach","dragEnd","dropResult","destination","prevOrder","source","newOrder","changeStepOrder","previous","new","parseInt","sort","b","params","_circuit$Steps$","onDragEnd","goBack","step_UpdateStepModal","circuit_UpdateCircuitModal","Achievement","Todo","DetailedCircuit","_this$state$circuit","rate","disabled","defaultValue","es_button","dangerouslySetInnerHTML","__html","comment","author","avatar","content","datetime","tooltip","library","add","faUser","faPen","faAlignJustify","App","credentials","setItem","token","removeItem","Navigation_Navigation","Route","exact","path","component","render","Account_Account","Boolean","location","hostname","timeout","transition","position","positions","TOP_CENTER","containerStyle","zIndex","ReactDOM","BrowserRouter","react_alert","template","AlertTemplate","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bd68244.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter,\n    Form, FormGroup, FormFeedback, Label, Input,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Connect extends Component {\n\n    state = {\n        email: '',\n        password: '',\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: undefined,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { login } = this.props;\n        login('signin', this.state).catch((error) => {\n            if (error.code === 401) {\n                this.setState({ error: error.text });\n                console.log('Oups, une erreur s\\'est produite');\n            }\n        });\n    }\n\n    render() {\n\n        const { email, password, error } = this.state;\n        const { displayModal } = this.props;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Email</Label>\n                        <Input\n                            type='email'\n                            name='email'\n                            placeholder='Indiquez votre email'\n                            value={email}\n                            onChange={this.handleChange}\n                            invalid={error}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Mot de passe</Label>\n                        <Input\n                            type='password'\n                            name='password'\n                            placeholder='Indiquez votre mot de passe'\n                            value={password}\n                            onChange={this.handleChange}\n                            invalid={error}\n                        />\n                        <FormFeedback>{error}</FormFeedback>\n                    </FormGroup>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        type='submit'\n                        onClick={this.handleSubmit}\n                    >Connexion\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </Form>\n        );\n    }\n\n}\n\nexport default withRouter(Connect);\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter,\n    Form, FormGroup, Label, Input, FormFeedback,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Register extends Component {\n\n    state = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        repeatPassword: '',\n    };\n\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            [`verif${event.target.name}`]: undefined,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {\n            email,\n            password,\n            repeatPassword,\n        } = this.state;\n\n\n        // Vérification du format d'email\n        if (!email.match(/^[\\w-.]+@[\\w-]+\\.\\w+$/g)) {\n            this.setState({ verifemail: true });\n        } else if (password.length < 8) {\n            this.setState({ verifpassword: true });\n        } else if (repeatPassword !== password) {\n            this.setState({ verifrepeatPassword: true });\n        } else {\n            // Copie du state dans un nouvel objet pour pouvoir supprimer des propriétés\n            const user = Object.assign({}, this.state);\n            delete user.repeatPassword;\n            const { login } = this.props;\n            login('signup', user).then((data) => {\n                console.log(data);\n            }).catch(() => {\n                console.log('Oups, une erreur s\\'est produite');\n            });\n        }\n\n    }\n\n    render() {\n        const { firstname, lastname, email, password, repeatPassword,\n            verifemail, verifpassword, verifrepeatPassword } = this.state;\n        const { displayModal } = this.props;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Nom</Label>\n                        <Input\n                            type='text'\n                            name='lastname'\n                            onChange={this.handleChange}\n                            value={lastname}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Prénom</Label>\n                        <Input\n                            type='text'\n                            name='firstname'\n                            onChange={this.handleChange}\n                            value={firstname}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Email</Label>\n                        <Input\n                            type='email'\n                            name='email'\n                            onChange={this.handleChange}\n                            value={email}\n                            invalid={verifemail}\n                        />\n                        <FormFeedback>Ce n‘est pas une adresse valide</FormFeedback>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Mot de passe</Label>\n                        <Input\n                            type='password'\n                            name='password'\n                            placeholder='8 caractères minimum'\n                            onChange={this.handleChange}\n                            value={password}\n                            invalid={verifpassword}\n                        />\n                        <FormFeedback>Votre mot de passe doit faire plus de 8 caractères</FormFeedback>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type='password'\n                            name='repeatPassword'\n                            placeholder='Répétez votre mot de passe'\n                            onChange={this.handleChange}\n                            value={repeatPassword}\n                            invalid={verifrepeatPassword}\n                        />\n                        <FormFeedback>Vos mots de passes ne correspondent pas</FormFeedback>\n                    </FormGroup>\n\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        type='submit'\n                        onClick={this.handleSubmit}\n                    >Inscription\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </Form>\n        );\n    }\n\n}\n\nexport default withRouter(Register);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Modal, ModalHeader } from 'reactstrap';\nimport { Menu, Dropdown } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Connect from './Connect';\nimport Register from './Register';\n\nexport default class Authentication extends React.Component {\n\n    state = {\n        modal: false,\n        registerByDefault: true,\n    };\n\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    render() {\n        const { modal, registerByDefault } = this.state;\n        const { login, logout, isConnected } = this.props;\n\n        const userOptions = (\n            <Menu>\n                <Menu.Item>\n                    <Link to='/account'>Mon compte</Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <Link to='/' onClick={logout}>Déconnexion</Link>\n                </Menu.Item>\n            </Menu>\n        );\n\n        return (\n            <>\n\n                {isConnected ?\n\n                    <Dropdown overlay={userOptions} id='dropdown'>\n                        <a className='ant-dropdown-link' href='#g'>\n                            <FontAwesomeIcon icon='user' className='user-icon' />\n                        </a>\n                    </Dropdown>\n\n                    :\n\n                    <>\n                        <p onClick={this.displayModal} className='auth-text'>Authentification</p>\n\n                        <Modal isOpen={modal} fade={false} toggle={this.displayModal}>\n\n                            <div className='modal-header'>\n                                <ModalHeader\n                                    className={registerByDefault === true ? 'active' : ''}\n                                    onClick={() => this.setState({ registerByDefault: true })}\n                                >Inscription\n                                </ModalHeader>\n                                <ModalHeader\n                                    className={registerByDefault === true ? '' : 'active'}\n                                    onClick={() => this.setState({ registerByDefault: false })}\n                                >Connexion\n                                </ModalHeader>\n                            </div>\n\n                            {registerByDefault ?\n                                <Register\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                                :\n                                <Connect\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                            }\n                        </Modal>\n                    </>\n                }\n\n            </>\n        );\n    }\n\n}\n","const API_HOST = process.env.REACT_APP_API_URL;\n\n/**\n *\n * @param {*} response\n */\nasync function checkStatus(response) {\n    if (response.ok) {\n        if (response.status === 204) return Promise.resolve();\n        return Promise.resolve(response.json());\n    }\n    return Promise.reject({ code: response.status, text: await response.text() });\n}\n\n\n/**\n * Fonction d'envoie d'une requête au serveur\n * @param {String} route : La route de la requête (sans l'url du serveur)\n * @param {String} method : La méthode de la requête\n * @param {Object} body : Un objet représentant le body de la requête\n */\nfunction request(route, method, body) {\n    const options = {\n        method: method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    if (localStorage.getItem('token')) {\n        options.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n    }\n\n    if (body) {\n        options.body = JSON.stringify(body);\n    }\n\n    return fetch(API_HOST + route, options)\n        .then(checkStatus);\n}\n\n\nexport default {\n    get: route => request(route, 'GET'),\n    post: (route, body) => request(route, 'POST', body),\n    put: (route, body) => request(route, 'PUT', body),\n    delete: route => request(route, 'DELETE'),\n};\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter, Form, FormGroup,\n    Label, Input, Modal, ModalHeader,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nimport api from '../../utils/httpMethods';\n\nclass CreateCircuitModal extends Component {\n\n    state = {\n        name: '',\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const { name } = this.state;\n        const { displayModal } = this.props;\n        api.post('circuit', {\n            name: name,\n        }).then((data) => {\n            displayModal();\n            const { history } = this.props;\n            history.push(`/circuit/${data.id_circuit}`);\n        }).catch(() => {\n            console.log('Oups, une erreur s\\'est produite');\n        });\n    }\n\n    render() {\n        const { name } = this.state;\n        const { modal, displayModal } = this.props;\n\n        return (\n            <>\n                <Modal\n                    isOpen={modal}\n                    fade={false}\n                    toggle={displayModal}\n                >\n                    <ModalHeader>Nouveau circuit</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Nom</Label>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    value={name}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button\n                            color='primary'\n                            onClick={this.handleSubmit}\n                        >Créer\n                        </Button>\n                        <Button\n                            color='secondary'\n                            onClick={displayModal}\n                        >Annuler\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(CreateCircuitModal);\n","import React from 'react';\nimport { Collapse, Navbar, Nav } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Menu, Dropdown } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Authentication from './authentication/Authentication';\nimport CreateCircuitModal from './circuit/CreateCircuitModal';\n\nexport default class Navigation extends React.Component {\n\n    state = {\n        modal: false,\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    render() {\n        const { modal } = this.state;\n        const { isConnected, login, logout } = this.props;\n\n        const circuitOptions = (\n            <Menu>\n                <Menu.Item>\n                    <Link to='/circuits'>Créés</Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <Link to='/achievements'>Accomplis</Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <Link to='/todo'>Favoris</Link>\n                </Menu.Item>\n                <Menu.Divider />\n                <Menu.Item>\n                    <p\n                        onClick={this.displayModal}\n                        className='create-circuit'\n                    >Créer un circuit\n                    </p>\n                </Menu.Item>\n            </Menu>\n        );\n\n        return (\n            <div>\n                <Navbar expand='md' fixed='top'>\n                    <Link to='/'>\n                        <img src='/img/logoGeoScoutWhite.png' className='logo' alt='GeoScout' />\n                    </Link>\n\n                    {isConnected ?\n                        <Collapse navbar>\n                            <Nav className='ml-auto' navbar>\n\n                                <Dropdown overlay={circuitOptions} id='dropdown'>\n                                    <a className='ant-dropdown-link' href='#g'>Circuits</a>\n                                </Dropdown>\n\n                                <Authentication isConnected={isConnected} logout={logout} />\n\n                            </Nav>\n                        </Collapse>\n\n                        :\n\n                        <Collapse navbar>\n                            <Nav className='flex-end' navbar>\n\n                                <Authentication isConnected={isConnected} login={login} />\n\n                            </Nav>\n                        </Collapse>\n                    }\n\n                </Navbar>\n\n                <CreateCircuitModal\n                    displayModal={this.displayModal}\n                    modal={modal}\n                />\n\n            </div>\n        );\n    }\n\n}\n","import React, { PureComponent } from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n\nexport default class Pin extends PureComponent {\n\n    render() {\n        const { onClick, index } = this.props;\n        let x = 8;\n\n        const { color } = this.props;\n        const pinStyle = {\n            cursor: 'pointer',\n            fill: color,\n            stroke: 'none',\n        };\n\n        if (index === 11) {\n            x = 6;\n        } else if (index > 9) {\n            x = 5;\n        } else if (index === 1 || index === 7) {\n            x = 9;\n        }\n\n        return (\n            <svg\n                height={25}\n                viewBox='0 0 24 24'\n                style={{ ...pinStyle }}\n                onClick={onClick}\n            >\n                <path d={ICON} />\n                <text x={x} y={15} fill='white' fontSize={13}>{index}</text>\n\n            </svg>\n        );\n    }\n\n}\n","import React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport Pin from './Pin';\nimport MAP_STYLE from '../utils/map-style-basic.json';\n\n/* Map de création de circuits */\nexport default class Map extends React.Component {\n\n    centerStep = (step) => {\n        const { viewport, changeViewport } = this.props;\n        viewport.latitude = step.latitude;\n        viewport.longitude = step.longitude + 0.03;\n        viewport.zoom = 12;\n        changeViewport(viewport);\n    }\n\n    render() {\n        const {\n            steps, circuits, onClickMap, onClickMarker,\n            className, viewport, userPosition, changeViewport,\n        } = this.props;\n\n        return (\n            <div className={className}>\n                <ReactMapGL\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\n                    {...viewport}\n                    mapStyle={MAP_STYLE}\n                    onViewportChange={changeViewport}\n                    onClick={onClickMap}\n                >\n                    {userPosition &&\n                        <Marker\n                            latitude={userPosition.latitude}\n                            longitude={userPosition.longitude}\n                            offsetLeft={-10}\n                            offsetTop={-20}\n                        >\n                            <Pin color='#cc0000' />\n                        </Marker>\n                    }\n                    { /* Affichage des étapes dans le cas de la création/update de circuit */}\n                    {steps && steps.map(s => <Marker\n                        key={s.id_step}\n                        latitude={s.latitude}\n                        longitude={s.longitude}\n                        offsetLeft={-11}\n                        offsetTop={-25}\n                    >\n                        <Pin\n                            color='#1f7a1f'\n                            index={s.order}\n                            onClick={() => {\n                                onClickMarker(s);\n                                this.centerStep(s);\n                            }}\n                        />\n                    </Marker>)}\n                    { /* Affichage des circuits dans le cas de la map de la homepage */}\n                    {circuits && circuits.map((c, idx) => {\n                        if (c != null && c.Steps[0].latitude && c.Steps[0].longitude) {\n                            return (\n                                <Marker\n                                    key={idx}\n                                    latitude={c.Steps[0].latitude}\n                                    longitude={c.Steps[0].longitude}\n                                    offsetLeft={-11}\n                                    offsetTop={-25}\n                                >\n                                    <Pin\n                                        color='#0066cc'\n                                        onClick={() => onClickMarker(c.id_circuit)}\n                                    />\n                                </Marker>\n                            );\n                        }\n                        return null;\n                    })}\n                </ReactMapGL>\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Tooltip } from 'reactstrap';\n\nclass CircuitListItem extends Component {\n\n    state = {\n        tooltipPublicationOpen: false,\n        tooltipLevelOpen: false,\n    };\n\n    publishedStatusToggler = () => {\n        this.setState({\n            tooltipPublicationOpen: !this.state.tooltipPublicationOpen,\n        });\n    }\n\n    levelToggler = () => {\n        this.setState({\n            tooltipLevelOpen: !this.state.tooltipLevelOpen,\n        });\n    }\n\n    test = () => {\n\n    };\n\n    render() {\n\n        const {\n            id_circuit, name, description, length, onHome,\n            duration, version, published, level, history,\n        } = this.props;\n        const { tooltipPublicationOpen, tooltipLevelOpen } = this.state;\n\n        let classLevel;\n        switch (level) {\n            case '1':\n                classLevel = 'medium';\n                break;\n            case '2':\n                classLevel = 'hard';\n                break;\n            default:\n                classLevel = 'easy';\n                break;\n        }\n\n        const overview = (description != null) && `${description.replace(/<(.|\\n)*?>/g, '').substring(0, 50)}...`;\n\n        return (\n            <>\n                <li\n                    className='list-item'\n                    onClick={() => (onHome ? history.push(`detail/${id_circuit}`) : history.push(`circuit/${id_circuit}`))}\n                >\n\n                    <h3 className='item-name'>{name}</h3>\n\n                    {overview}\n\n                    {(length && length > 0 && length !== null) ?\n                        <p className='bold-info-circuit'>{length} km</p>\n                        :\n                        <p className='bold-info-circuit'>- 1km</p>\n                    }\n\n                    {(duration && length > 0 && duration !== null) ?\n                        <p className='bold-info-circuit'>{duration && `${duration} heures`}</p>\n                        :\n                        <p className='bold-info-circuit'>- 1heure</p>\n                    }\n\n                    <p className='version-item'>{version >= 0 && `Version : ${version}`}</p>\n\n                    {!onHome &&\n                        <>\n                            <Tooltip\n                                placement='top'\n                                isOpen={tooltipPublicationOpen}\n                                autohide={false}\n                                target={`published${id_circuit}`}\n                                toggle={this.publishedStatusToggler}\n                            >\n                                {published === true ? 'Publié' : 'Non-publié'}\n                            </Tooltip>\n                            <FontAwesomeIcon\n                                id={`published${id_circuit}`}\n                                icon='align-justify'\n                                className='published-item'\n                                color={published === true ? '#27ae60' : 'white'}\n                            />\n                        </>\n                    }\n                    <Tooltip\n                        placement='top'\n                        isOpen={tooltipLevelOpen}\n                        autohide={false}\n                        target={`level${id_circuit}`}\n                        toggle={this.levelToggler}\n                    >\n                        {`Difficulté : ${classLevel}`}\n                    </Tooltip>\n                    <span className={`level-item ${classLevel}`} id={`level${id_circuit}`} />\n\n                </li>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(CircuitListItem);\n","import React from 'react';\nimport CircuitListItem from './CircuitListItem';\n\nexport default ({ items = [], onHome }) => (\n\n    <ul className='item-wrapper'>\n        {items.map(item => <CircuitListItem key={item.id_circuit} {...item} onHome={onHome} />)}\n    </ul>\n\n);\n","import React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport '../css/app-minifized.css';\nimport CreatedCircuitList from '../components/circuit/CircuitList';\n\nimport api from '../utils/httpMethods';\n\nexport default class CircuitsView extends Component {\n\n    state = {\n        dropdownOpen: false,\n        filter: 'Tous',\n        circuits: [],\n    };\n\n    toggle = () => {\n        const { dropdownOpen } = this.state;\n        this.setState({\n            dropdownOpen: !dropdownOpen,\n        });\n    }\n\n    onFilterClick = (event) => {\n        this.setState({ filter: event.target.name });\n    }\n\n    componentDidMount = () => {\n        const { onHome, circuits } = this.props;\n        if (onHome) {\n            this.setState({\n                circuits: circuits,\n            });\n        } else {\n            api.get('my-circuits').then((data) => {\n                this.setState({ circuits: data });\n            }).catch(() => {\n                console.log(this.props);\n            });\n        }\n    }\n\n    render() {\n        const { dropdownOpen, filter, circuits } = this.state;\n        const { onHome } = this.props;\n        const showPublished = (filter === 'Publiés');\n\n        return (\n            <>\n                <div className='my-circuits-header'>\n\n                    {onHome\n                        ?\n                        <h1>Circuits environnants</h1>\n\n                        :\n                        <>\n                            <h1>Circuits créés</h1>\n\n                            <div className='header-buttons'>\n\n                                <ButtonDropdown\n                                    direction='left'\n                                    className='button-dropdown'\n                                    isOpen={dropdownOpen}\n                                    toggle={this.toggle}\n                                >\n                                    <DropdownToggle caret color='info'>{filter}</DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem\n                                            name='Tous'\n                                            onClick={this.onFilterClick}\n                                        >Tous\n                                        </DropdownItem>\n                                        <DropdownItem\n                                            name='Publiés'\n                                            onClick={this.onFilterClick}\n                                        >Publiés\n                                        </DropdownItem>\n                                        <DropdownItem\n                                            name='Non-publiés'\n                                            onClick={this.onFilterClick}\n                                        >Non-publiés\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </ButtonDropdown>\n                            </div>\n                        </>\n                    }\n\n                </div>\n                {filter === 'Tous' ?\n                    <CreatedCircuitList\n                        items={circuits}\n                        onHome={onHome}\n                    />\n                    :\n                    <CreatedCircuitList\n                        items={circuits.filter(element => element.published === (showPublished))}\n                    />\n                }\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport ToggleButton from 'react-toggle-button';\n\nimport Map from '../components/Map';\nimport api from '../utils/httpMethods';\nimport CircuitsView from './CircuitsView';\n\nexport default class Home extends Component {\n\n    state = {\n        circuits: [],\n        value: false,\n        onHome: true,\n        viewport: {\n            width: '100%',\n            height: window.innerHeight - 50,\n            latitude: 48.582651,\n            longitude: 7.749534,\n            distance: 30,\n            zoom: 12,\n        },\n    }\n\n    componentDidMount() {\n        // Récupération de la position de l'utilisateur\n        // eslint-disable-next-line no-undef\n        if (navigator.geolocation) {\n            // eslint-disable-next-line no-undef\n            navigator.geolocation.getCurrentPosition((data) => {\n                const { viewport } = this.state;\n                viewport.latitude = data.coords.latitude;\n                viewport.longitude = data.coords.longitude;\n\n                this.setState({\n                    viewport: viewport,\n                    userPosition: data.coords,\n                });\n            });\n        }\n        this.getCircuits();\n    }\n\n    getCircuits = () => {\n        const { viewport: { longitude, latitude, distance } } = this.state;\n        const body = {\n            user_longitude: longitude,\n            user_latitude: latitude,\n            distance: distance,\n        };\n        api.post('circuit/nearby', body).then((data) => {\n            this.setState({\n                circuits: data,\n            });\n        }).catch(() => {\n            console.log('Oups, une erreur s\\'est produite');\n        });\n    }\n\n    changeViewport = (viewport) => {\n        this.setState({\n            viewport: viewport,\n        });\n    }\n\n    onClickItem = (id_circuit) => {\n        const { history } = this.props;\n        if (id_circuit) {\n            history.push(`detail/${id_circuit}`);\n        }\n    }\n\n    render() {\n        const { circuits, value, onHome, viewport, userPosition } = this.state;\n\n        return (\n            <>\n                {value === false\n                    ?\n                    <Map\n                        className='map'\n                        circuits={circuits}\n                        viewport={viewport}\n                        userPosition={userPosition}\n                        changeViewport={this.changeViewport}\n                        onClickMarker={this.onClickItem}\n                    />\n                    :\n                    <CircuitsView\n                        onHome={onHome}\n                        circuits={circuits}\n                    />\n                }\n\n                <div className='toggle-button'>\n                    <p>Liste</p>\n                    <ToggleButton\n                        value={value || false}\n                        onToggle={(value) => {\n                            this.setState({\n                                value: !value,\n                            });\n                        }}\n                    />\n                </div>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Account extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Mon compte</h1>\n            </>\n        );\n    }\n\n}\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nexport default ({ step, onClickItem, stepFocus }) => (\n    <Draggable\n        draggableId={step.id_step}\n        index={step.order}\n    >\n        {provided => (\n            <li\n                className={`step-wrapper-item ${stepFocus && step.id_step === stepFocus.id_step && 'focus-step'}`}\n                onClick={() => onClickItem(step)}\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n            >\n\n                <div>\n                    <span className='step-name'>{step.name}</span>\n                </div>\n\n\n                <span className='order-item'>{step.order}</span>\n\n            </li>\n        )}\n    </Draggable>\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport StepListItem from './StepListItem';\n\nexport default ({ items = [], onClickItem, stepFocus }) => (\n    <Droppable droppableId='drop-step' type='STEP'>\n        {(provided, snapshot) => (\n            <ul\n                className='step-wrapper'\n                ref={provided.innerRef}\n                style={{ backgroundColor: snapshot.isDraggingOver && '#65D8C1' }}\n                {...provided.droppableProps}\n            >\n                {items.map(item => <StepListItem\n                    key={item.order}\n                    step={item}\n                    onClickItem={onClickItem}\n                    stepFocus={stepFocus}\n                />)}\n                {provided.placeholder}\n            </ul>\n        )}\n    </Droppable>\n\n);\n","import React from 'react';\nimport { FormGroup, Label, Input, TabPane, Row, Col, TabContent } from 'reactstrap';\nimport 'antd/dist/antd.css';\n\nexport default class QuestionList extends React.Component {\n\n    state = {\n    }\n\n    render() {\n        const { activeTab, handleChangeQuestion } = this.props;\n        const { wording, response } = (this.props.items[activeTab]) ? this.props.items[activeTab] : '';\n\n        return (\n\n            <>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId={activeTab}>\n                        <Row>\n                            <Col sm='12'>\n\n                                <FormGroup>\n                                    <Label>Intitulé de la question</Label>\n                                    <Input\n                                        type='textarea'\n                                        name='wording'\n                                        value={(wording) || ''}\n                                        onChange={event => handleChangeQuestion(event, activeTab)}\n                                    />\n                                </FormGroup>\n\n                                <FormGroup>\n                                    <Label>Réponse</Label>\n                                    <Input\n                                        type='textarea'\n                                        name='response'\n                                        value={(response) || ''}\n                                        onChange={event => handleChangeQuestion(event, activeTab)}\n                                    />\n                                </FormGroup>\n\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n            </>\n        );\n\n    }\n\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nimport QuestionList from './QuestionList';\n\nexport default class MultipleQuestion extends React.Component {\n\n    state = {\n        activeTab: '0',\n    }\n\n    toggle = (tab) => {\n        const { activeTab } = this.state;\n        if (activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n\n    render() {\n\n        const { activeTab } = this.state;\n        const { Questions, handleChangeQuestion } = this.props;\n\n        return (\n            <>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '0' })}\n                            onClick={() => { this.toggle('0'); }}\n                        >\n                            Facile\n                        </NavLink>\n                    </NavItem>\n\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '1' })}\n                            onClick={() => { this.toggle('1'); }}\n                        >\n                            Intermédiaire\n                        </NavLink>\n                    </NavItem>\n\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { this.toggle('2'); }}\n                        >\n                            Difficile\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n\n                <QuestionList\n                    items={Questions}\n                    activeTab={activeTab}\n                    handleChangeQuestion={handleChangeQuestion}\n                />\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { withAlert } from 'react-alert';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Checkbox } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport MultipleQuestion from './MultipleQuestion';\n\nclass UpdateStepModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        instruction: '',\n        validation: false,\n        Questions: [],\n    };\n\n    modules = {\n        toolbar: [\n            [{ header: [1, 2, false] }],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n            ['link', 'image'],\n            ['clean'],\n        ],\n    };\n\n    formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\n        'list', 'bullet', 'indent',\n        'link', 'image',\n    ];\n\n    componentDidUpdate(prevProps) {\n        const { step } = this.props;\n        if (prevProps.step !== step) {\n            if (step) {\n                this.setState(Object.assign({}, step, {\n                    description: step.description || '',\n                    instruction: step.instruction || '',\n                    validation: step.validation || true,\n                    Questions: (step.Questions && step.Questions.length !== 0) ? step.Questions :\n                        [{\n                            wording: '',\n                            response: '',\n                            type_of: 1,\n                            points: 5,\n                            difficulty: 1,\n                        },\n                        {\n                            wording: '',\n                            response: '',\n                            type_of: 1,\n                            points: 10,\n                            difficulty: 2,\n                        },\n                        {\n                            wording: '',\n                            response: '',\n                            type_of: 1,\n                            points: 15,\n                            difficulty: 3,\n                        }],\n                }));\n            }\n        }\n    }\n\n    /**\n     * Fonction de gestion de modification des champs non-riches\n     * @param {Event} event : évènement contenant la valeur des champs non-riches\n     */\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    /**\n     * Fonction de gestion de modification de la description d'une étape\n     * @param {String} value : nouvelle valeur qui est renvoyée par le champs\n     */\n    handleRichTextChange = (value) => {\n        this.setState({ description: value });\n    }\n\n    /**\n     * Fonction de gestion de modification d'une question\n     * @param {Event} event : event envoyé lorsqu'une question est modifiée\n     * @param {String} index : index de la question qui vient d'être modifiée\n     */\n    handleChangeQuestion = (event, index) => {\n        const { name, value } = event.target;\n        this.setState((prevState) => {\n            prevState.Questions[index][name] = value;\n            return { Questions: prevState.Questions };\n        });\n    }\n\n    /**\n     * Fonction de gestion du changement d'état de la checkbox\n     * @param {Event} event : event envoyé lorsque la checkbox est cochée\n     */\n    handleCheckboxChange = (event) => {\n        this.setState({ validation: event.target.checked });\n    }\n\n    handleSubmit = () => {\n        const step = this.state;\n        const { displayUpdateStep, updateStep, alert } = this.props;\n        updateStep(step)\n            .then(() => {\n                displayUpdateStep();\n                alert.success('Etape mise à jour');\n            })\n            .catch(() => alert.error('Oups, une erreur s\\'est produite'));\n    }\n\n    render() {\n        const { id_step, name, description, instruction, validation, Questions } = this.state;\n        const { show, displayUpdateStep, removeStep } = this.props;\n\n        return (\n            <>\n                <div className={show ? 'update-step' : 'hidden-update-step'}>\n                    <div className='update-title'>\n                        <h3>{'Modification de l\\'étape'}</h3>\n                    </div>\n                    <Form className='update-form' onSubmit={e => e.preventDefault()}>\n                        <FormGroup>\n                            <Label id='scroll-top-step'>Nom</Label>\n                            <Input\n                                type='text'\n                                name='name'\n                                value={name}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Description</Label>\n                            <ReactQuill\n                                className='rich-text-editor'\n                                theme='snow'\n                                modules={this.modules}\n                                formats={this.formats}\n                                value={description}\n                                onChange={this.handleRichTextChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Instruction de transit</Label>\n                            <Input\n                                type='textarea'\n                                name='instruction'\n                                value={instruction}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <Checkbox\n                            name='validation'\n                            value={validation}\n                            onChange={this.handleCheckboxChange}\n                        >Validation par position GPS\n                        </Checkbox>\n\n                        <MultipleQuestion\n                            Questions={Questions}\n                            handleChangeQuestion={this.handleChangeQuestion}\n                        />\n\n                        <div className='update-buttons'>\n                            <Button\n                                type='submit'\n                                color='info'\n                                onClick={this.handleSubmit}\n                            >Modifier\n                            </Button>\n                            <Button\n                                color='danger'\n                                onClick={() => removeStep(id_step)}\n                            >Supprimer\n                            </Button>\n                            <Button\n                                color='secondary'\n                                onClick={displayUpdateStep}\n                            >Annuler\n                            </Button>\n                        </div>\n\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n}\n\nexport default withAlert()(UpdateStepModal);\n","import React, { Component } from 'react';\nimport { withAlert } from 'react-alert';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nclass UpdateCircuitModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        length: '',\n        duration: '',\n    };\n\n    modules = {\n        toolbar: [\n            [{ header: [1, 2, false] }],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n            ['link', 'image'],\n            ['clean'],\n        ],\n    };\n\n    formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\n        'list', 'bullet', 'indent',\n        'link', 'image',\n    ];\n\n    componentDidUpdate(prevProps) {\n        const { circuit } = this.props;\n        if (prevProps.circuit !== circuit) {\n            if (circuit) {\n                this.setState(Object.assign({}, circuit, {\n                    description: circuit.description || '',\n                    instruction: circuit.instruction || '',\n                    length: circuit.length || '',\n                    duration: circuit.duration || '',\n                }));\n            }\n        }\n    }\n\n    /**\n     * Fonction de gestion de modification d'un circuit\n     * @param {Event} event : event envoyé lorsque le nom d'un circuit est modifié\n     */\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    /**\n     * Fonction de gestion de modification d'un circuit\n     * @param {String} value : renvoyée en cas de modification de la description\n     */\n    handleRichTextChange = (value) => {\n        this.setState({\n            description: value,\n        });\n    }\n\n    handleSubmit = () => {\n        const { name, description } = this.state;\n        const { displayUpdateCircuit, alert, updateCircuit } = this.props;\n        const { id_circuit } = this.props.circuit;\n        const circuit = {\n            id_circuit: id_circuit,\n            name: name || null,\n            description: description || null,\n        };\n        updateCircuit(circuit)\n            .then(() => {\n                displayUpdateCircuit();\n                alert.success('Circuit mis à jour');\n            })\n            .catch(() => console.log('Oups, une erreur s\\'est produite'));\n    }\n\n    render() {\n        const { name, description, length, duration } = this.state;\n        const { show, displayUpdateCircuit } = this.props;\n\n        return (\n            <>\n                <div className={show ? 'update-circuit' : 'hidden-update-circuit'}>\n                    <div className='update-title'>\n                        <h3>Modification du circuit</h3>\n                    </div>\n                    <Form className='update-form'>\n                        <FormGroup>\n                            <Label>Nom</Label>\n                            <Input\n                                type='text'\n                                name='name'\n                                value={name}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Description</Label>\n                            <ReactQuill\n                                className='rich-text-editor'\n                                theme='snow'\n                                modules={this.modules}\n                                formats={this.formats}\n                                value={description}\n                                onChange={this.handleRichTextChange}\n                            />\n                        </FormGroup>\n\n                        {duration > 0 &&\n                            <FormGroup>\n                                <Label>Durée estimée</Label>\n                                <p>{`${duration} heure(s)`}</p>\n                            </FormGroup>\n                        }\n\n\n                        {length > 0 &&\n                            <FormGroup>\n                                <Label>Distance à vol d‘oiseau</Label>\n                                <p>{`${length} km`}</p>\n                            </FormGroup>\n                        }\n\n                        <div className='update-buttons'>\n                            <Button\n                                color='info'\n                                onClick={this.handleSubmit}\n                            >Modifier\n                            </Button>\n                            <Button\n                                color='secondary'\n                                onClick={displayUpdateCircuit}\n                            >Annuler\n                            </Button>\n                        </div>\n\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n}\n\nexport default withAlert()(UpdateCircuitModal);\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport Map from '../components/Map';\nimport StepList from '../components/step/StepList';\nimport UpdateStepModal from '../components/step/UpdateStepModal';\nimport UpdateCircuitModal from '../components/circuit/UpdateCircuitModal';\n\nimport api from '../utils/httpMethods';\n\nexport default class CircuitPublisher extends Component {\n\n    state = {\n        circuit: {},\n        steps: [],\n        stepFocus: [],\n        circuitIsDisplayed: false,\n        stepIsDisplayed: false,\n        viewport: {\n            width: '100%',\n            height: window.innerHeight - 50,\n            latitude: 48.582651,\n            longitude: 7.749534,\n            distance: 30,\n            zoom: 12,\n        },\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        if (id) {\n            api.get(`download-circuit/${id}`).then((circuit) => {\n                const { longitude, latitude } = circuit.Steps[0];\n                const { viewport } = this.state;\n\n                viewport.latitude = latitude;\n                viewport.longitude = longitude;\n                circuit.Steps.sort((a, b) => a.order - b.order);\n\n                this.setState({\n                    circuit: circuit,\n                    steps: circuit.Steps,\n                    viewport: viewport,\n                });\n                circuit.id_circuit = id;\n            }).catch(() => {\n                console.log('Oups, une erreur s\\'est produite');\n            });\n        }\n    }\n\n    changeViewport = (viewport) => {\n        this.setState({\n            viewport: viewport,\n        });\n    }\n\n    /**\n     * Fonction de gestion du clic sur une étape\n     * @param {Object} step : l'objet Step qui a été cliqué\n     */\n    onClickItem = (step) => {\n        document.getElementById('scroll-top-step').scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n            inline: 'nearest',\n        });\n        this.setState({\n            stepFocus: step,\n            stepIsDisplayed: true,\n            circuitIsDisplayed: false,\n        });\n    }\n\n    /**\n     * Création d'une étape dans la base\n     * @param {Event} event : event envoyé\n     */\n    handleClickMap = (event) => {\n        const { circuit } = this.state;\n        const step = {\n            name: 'Etape',\n            longitude: event.lngLat[0],\n            latitude: event.lngLat[1],\n            id_circuit: circuit.id_circuit,\n        };\n        api.post('step', step).then((data) => {\n            this.setState((prev) => {\n                prev.steps.push(data);\n                return { steps: prev.steps };\n            });\n        }).catch(() => {\n            console.log('Oups, une erreur s\\'est produite');\n        });\n    }\n\n    /**\n     * Suppression d'une étape sur le serveur puis dans le state\n     * @param {Integer} id_step : L'index de l'étape dans le tableau steps du state\n     */\n    removeStep = (id_step) => {\n        const { circuit } = this.state;\n        api.delete(`step/${circuit.id_circuit}/${id_step}`).then(() => {\n            // Suppression de l'étape dans la liste\n            this.setState((prev) => {\n                const idx = prev.steps.findIndex(element => element.id_step === id_step);\n                prev.steps.splice(idx, 1);\n                prev.steps.forEach((element, index) => {\n                    if (index >= idx) {\n                        element.order--;\n                    }\n                });\n                return { steps: prev.steps };\n            });\n            this.displayUpdateStep();\n        }).catch(() => {\n            console.log('Oups, une erreur s\\'est produite');\n        });\n    }\n\n    /**\n     * Modification d'une étape\n     * @param {Object} step : L'objet étape modifié\n     */\n    updateStep = step => api.put(`step/${step.id_step}`, { step }).then(() => {\n        this.setState((prev) => {\n            const index = prev.steps.findIndex(s => s.id_step === step.id_step);\n            prev.steps[index] = step;\n        });\n    })\n\n    /**\n     * Modification du circuit\n     * @param {Object} circuit : L'objet circuit modifié\n     */\n    updateCircuit = circuit => api.put(`circuit/${circuit.id_circuit}`, circuit).then(() => {\n        this.setState({\n            circuit,\n        });\n    })\n\n    displayUpdateCircuit = () => {\n        this.setState(previousState => ({\n            circuitIsDisplayed: !previousState.circuitIsDisplayed,\n            stepIsDisplayed: false,\n            stepFocus: null,\n        }));\n    }\n\n    displayUpdateStep = () => {\n        this.setState(previousState => ({\n            stepIsDisplayed: !previousState.stepIsDisplayed,\n            circuitIsDisplayed: false,\n            stepFocus: null,\n        }));\n    }\n\n    /**\n     * Fonction lancé par le Drag & Drop de la liste d'étape\n     * @param {Object} dropResult : Event lancé par le drop d'un Draggable dans un Droppable\n     */\n    dragEnd = (dropResult) => {\n        if (dropResult.destination) {\n            const {\n                source: {\n                    index: prevOrder,\n                },\n                destination: {\n                    index: newOrder,\n                },\n            } = dropResult;\n\n\n            const { circuit: { id_circuit } } = this.state;\n            this.changeStepOrder(prevOrder, newOrder);\n\n            api.put('step-order', {\n                id_circuit: id_circuit,\n                previous: prevOrder,\n                new: newOrder,\n            })\n                .then(() => null)\n                .catch(() => {\n                    this.changeStepOrder(newOrder, prevOrder);\n                    console.log('Oups, une erreur s\\'est produite');\n                });\n        }\n    }\n\n    /**\n     * Fonction de modification de l'ordre des questions dans le state\n     * @param {Integer} prevOrder : L'ordre de l'étape à déplacer\n     * @param {Integer} newOrder : Le nouvel ordre de l'étape\n     */\n    changeStepOrder = (prevOrder, newOrder) => {\n        this.setState((prev) => {\n            const steps = prev.steps.map((step) => {\n\n                if (step.order === parseInt(prevOrder)) {\n                    step.order = newOrder;\n                } else if (newOrder <= step.order && step.order < prevOrder) {\n                    step.order += 1;\n                } else if (step.order > prevOrder && step.order <= newOrder) {\n                    step.order -= 1;\n                }\n\n                return step;\n            });\n            steps.sort((a, b) => a.order - b.order);\n            return { steps: steps };\n        });\n    }\n\n    render() {\n        const { steps, stepFocus, circuit, circuitIsDisplayed,\n            stepIsDisplayed, userPosition, viewport,\n        } = this.state;\n        const { history } = this.props;\n\n        return (\n            <div className='view-wrapper'>\n                <Map\n                    className='new-map'\n                    steps={steps}\n                    onClickMap={this.handleClickMap}\n                    onClickMarker={this.onClickItem}\n                    userPosition={userPosition}\n                    viewport={viewport}\n                    changeViewport={this.changeViewport}\n                />\n\n                <div className='scroll-menu'>\n\n                    <div className='circuit-title'>\n                        <h3>{circuit.name}</h3>\n                        <Button\n                            className='update-circuit-button'\n                            onClick={this.displayUpdateCircuit}\n                            color='info'\n                        >Modifier\n                        </Button>\n                    </div>\n\n                    <DragDropContext\n                        onDragEnd={this.dragEnd}\n                    >\n                        <StepList\n                            items={steps}\n                            onClickItem={this.onClickItem}\n                            stepFocus={stepFocus}\n                        />\n                    </DragDropContext>\n\n                </div>\n\n                <p\n                    className='come-back-button'\n                    onClick={() => history.goBack()}\n                >Valider\n                </p>\n\n                <UpdateStepModal\n                    step={stepFocus}\n                    removeStep={this.removeStep}\n                    updateStep={this.updateStep}\n                    show={stepIsDisplayed}\n                    displayUpdateStep={this.displayUpdateStep}\n                />\n\n                <UpdateCircuitModal\n                    circuit={circuit}\n                    show={circuitIsDisplayed}\n                    displayUpdateCircuit={this.displayUpdateCircuit}\n                    updateCircuit={this.updateCircuit}\n                />\n\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Achievement extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Circuits accomplis</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Todo extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Mes favoris</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { Rate, Comment, Tooltip, Avatar, Button } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport api from '../utils/httpMethods';\n\nexport default class DetailedCircuit extends Component {\n\n    state = {\n        circuit: [],\n    }\n\n    componentDidMount = () => {\n        const { id } = this.props.match.params;\n        api.get(`circuit/${id}`).then((circuit) => {\n            this.setState({\n                circuit: circuit,\n            });\n        }).catch(() => {\n            console.log('Oups, une erreur s\\'est produite');\n        });\n    }\n\n    render() {\n\n        const { name, description } = this.state.circuit;\n\n        return (\n            <>\n                <div className='header-wrapper'>\n                    <div className='name-score'>\n                        <h1>{name}</h1>\n                        <div className='rating-wrapper'>\n                            <Rate disabled defaultValue={4} />\n                            <p>(256)</p>\n                        </div>\n                    </div>\n                    <Button type='primary' className='favoris-button'>Favoris</Button>\n                </div>\n\n                <div className='bottom-wrapper'>\n                    <div className='circuit-infos'>\n                        <div dangerouslySetInnerHTML={{ __html: description }} />\n                    </div>\n\n                    <div className='circuit-comments'>\n                        <h2 className='comments-title'>Commentaires</h2>\n                        <Comment\n                            author={<a href='http://copainsdavant.linternaute.com/p/stevy-palarski-20002480'>Stevy Palarski</a>}\n                            avatar={(\n                                <Avatar\n                                    src='https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\n                                    alt='Stevy Palarski'\n                                />\n                            )}\n                            content={(\n                                <p>\n                                    J‘ai pris beaucoup de plaisir à effectuer ce circuit.\n                                    Il m‘a permis de découvrir le centre-ville de Strasbourg.\n                                    Etant originaire de Caen, je n‘avais rarement eu l‘occasion\n                                    de voir une aussi belle ville !\n                                </p>\n                            )}\n                            datetime={(\n                                <Tooltip>\n                                    <span>Il y a deux jours</span>\n                                </Tooltip>\n                            )}\n                        />\n                    </div>\n                </div>\n\n\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faPen, faAlignJustify } from '@fortawesome/free-solid-svg-icons';\n\nimport './css/app-minifized.css';\nimport Navigation from './components/Navigation';\n\nimport Home from './views/Home';\nimport Account from './views/Account';\nimport CircuitsView from './views/CircuitsView';\nimport CircuitPublisher from './views/CircuitPublisher';\nimport Achievement from './views/Achievement';\nimport Todo from './views/Todo';\nimport DetailedCircuit from './views/DetailedCircuit';\n\nimport api from './utils/httpMethods';\n\nlibrary.add(faUser, faPen, faAlignJustify);\n\nclass App extends Component {\n\n    state = {\n        isConnected: false,\n        user: {},\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('token')) {\n            api.get('whoami').then((data) => {\n                this.setState({ user: data, isConnected: true });\n            }).catch(() => {\n                localStorage.removeItem('token');\n                console.log('Oups, une erreur s\\'est produite');\n            });\n        }\n    }\n\n    login = (route, credentials) => api.post(route, credentials).then((data) => {\n        localStorage.setItem('token', data.token);\n        this.setState({\n            isConnected: true,\n            user: data.user,\n        });\n    })\n\n    logout = () => {\n        localStorage.removeItem('token');\n        this.setState({\n            isConnected: false,\n            user: {},\n        });\n    }\n\n    render() {\n        const { isConnected, user } = this.state;\n        return (\n            <>\n                <div className='menu-wrapper'>\n                    <Navigation isConnected={isConnected} login={this.login} logout={this.logout} />\n                </div>\n\n                <Route exact path='/' component={Home} />\n                {isConnected ?\n                    <>\n                        <Route exact path='/account' render={props => <Account {...props} user={user} />} />\n                        <Route exact path='/circuits' component={CircuitsView} />\n                        <Route exact path='/circuit/:id' component={CircuitPublisher} />\n                        <Route exact path='/achievements' component={Achievement} />\n                        <Route exact path='/todo' component={Todo} />\n                    </>\n                    : null}\n                <Route exact path='/detail/:id' component={DetailedCircuit} />\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // 'Content is cached for offline use.' message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { positions, Provider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n    timeout: 1500,\n    transition: 'fade',\n    position: positions.TOP_CENTER,\n    containerStyle: {\n        zIndex: 1031,\n    },\n};\n\nReactDOM.render(\n\n\n    <BrowserRouter>\n        <Provider template={AlertTemplate} {...options}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}