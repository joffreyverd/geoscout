{"version":3,"sources":["components/authentication/Connect.js","components/authentication/Register.js","components/authentication/Authentication.js","components/Menu.js","components/Pin.js","components/Map.js","utils/httpMethods.js","views/Home.js","views/Account.js","components/circuit/CreatedCircuitListItem.js","components/circuit/CreatedCircuitList.js","components/circuit/CreateCircuitModal.js","views/CreatedCircuit.js","components/step/StepListItem.js","components/step/StepList.js","components/step/UpdateStepModal.js","components/circuit/UpdateCircuitModal.js","views/NewCircuit.js","views/Achievement.js","views/Todo.js","App.js","serviceWorker.js","index.js"],"names":["Connect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","handleSubmit","login","state","then","displayModal","catch","error","console","log","email","password","_this$state","react_default","a","createElement","Fragment","ModalBody","Form","FormGroup","Label","Input","type","placeholder","onChange","ModalFooter","Button","color","onClick","Component","withRouter","Register","firstname","lastname","repeatPassword","user","assign","data","Authentication","previousState","modal","displayDropdownAccount","dropdownOpen","isConnected","registerByDefault","_this2","_this$props","logout","Dropdown","nav","direction","isOpen","toggle","DropdownToggle","react_fontawesome_index_es","icon","className","DropdownMenu","Link","to","DropdownItem","Modal","fade","ModalHeader","authentication_Register","authentication_Connect","React","Menu","responsiveNavBarMode","displayDropdownCircuits","Navbar","expand","fixed","src","alt","NavbarToggler","Collapse","navbar","Nav","caret","Authentication_Authentication","NavItem","Pin","index","x","pinStyle","cursor","fill","stroke","height","viewBox","style","objectSpread","d","y","fontSize","PureComponent","Map","viewport","width","window","innerHeight","latitude","longitude","zoom","centerFirstSteps","steps","navigator","geolocation","getCurrentPosition","coords","userPosition","_this3","circuits","onClickMap","onClickMarker","esm","mapboxApiAccessToken","process","mapStyle","MAP_STYLE","onViewportChange","offsetLeft","offsetTop","Pin_Pin","map","s","idx","key","id_step","order","c","API_HOST","request","route","method","body","options","headers","Content-Type","localStorage","getItem","authorization","concat","JSON","stringify","fetch","checkStatus","response","ok","status","Promise","resolve","json","reject","code","text","httpMethods","get","post","put","delete","Home","api","Map_Map","Account","_ref","classLevel","id_circuit","description","length","duration","published","version","level","history","push","CreatedCircuitList","_ref$items","items","item","CreatedCircuitListItem","CreateCircuitModal","CreatedCircuit","filter","onFilterClick","componentDidMount","showPublished","ButtonDropdown","element","circuit_CreateCircuitModal","StepListItem","step","onClickItem","handleDrop","draggable","onDragStart","e","dataTransfer","setData","handleDragStart","onDragOver","preventDefault","onDrop","StepList","UpdateStepModal","instruction","questions","wording","fetchQuestion","id","id_question","undefined","handleChangeQuestion","persist","prev","updateStep","putQuestion","prevProps","question","_this$state$questions","open","UpdateCircuitModal","circuit","updateCircuit","_this$state2","NewCircuit","modalOpen","updateCircuitModalOpen","displayUpdateCircuitModal","stepFocus","handleClickMap","lngLat","removeStep","splice","handleDropStep","newOrder","getData","oldOrder","changeStepOrder","prevIdx","newIdx","sort","b","match","params","step_UpdateStepModal","circuit_UpdateCircuitModal","Achievement","Todo","library","add","faUser","faPen","faAlignJustify","App","credentials","setItem","token","removeItem","Menu_Menu","Route","exact","path","component","render","Account_Account","Boolean","location","hostname","ReactDOM","BrowserRouter","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7586fae9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Connect extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmit = () => {\n        this.props.login('signin', this.state).then(() => {\n            this.props.displayModal();\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n\n        const { email, password } = this.state;\n        const { displayModal } = this.props;\n\n        return (\n            <>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input\n                                type='email'\n                                name='email'\n                                placeholder='Indiquez votre email'\n                                value={email}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Mot de passe</Label>\n                            <Input\n                                type='password'\n                                name='password'\n                                placeholder='Indiquez votre mot de passe'\n                                value={password}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        onClick={this.handleSubmit}\n                    >Connexion\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(Connect);\n","import React, { Component } from 'react';\nimport { Button, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Register extends Component {\n\n    state = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        repeatPassword: '',\n    };\n\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmit = () => {\n        // Copie du state dans un nouvel objet pour pouvoir supprimer des propriétés\n        const user = Object.assign({}, this.state);\n        delete user.repeatPassword;\n\n        this.props.login('signup', user).then((data) => {\n            // success\n        }).catch((error) => {\n            // error\n        });\n\n    }\n\n    render() {\n        const { firstname, lastname, email, password, repeatPassword } = this.state;\n        const { displayModal } = this.props;\n        return (\n            <>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label>Nom</Label>\n                            <Input\n                                type='text'\n                                name='lastname'\n                                onChange={this.handleChange}\n                                value={lastname}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Prénom</Label>\n                            <Input\n                                type='text'\n                                name='firstname'\n                                onChange={this.handleChange}\n                                value={firstname}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input\n                                type='email'\n                                name='email'\n                                onChange={this.handleChange}\n                                value={email}\n                            />\n                        </FormGroup>\n\n                        <Label>Mot de passe</Label>\n                        <FormGroup>\n                            <Input\n                                type='password'\n                                name='password'\n                                placeholder='8 caractères minimum'\n                                onChange={this.handleChange}\n                                value={password}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Input\n                                type='password'\n                                name='repeatPassword'\n                                placeholder='Répétez votre mot de passe'\n                                onChange={this.handleChange}\n                                value={repeatPassword}\n                            />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        onClick={this.handleSubmit}\n                    >Inscription\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(Register);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    Modal, ModalHeader, DropdownToggle,\n    DropdownMenu, DropdownItem, Dropdown,\n} from 'reactstrap';\n\nimport Connect from './Connect';\nimport Register from './Register';\n\nexport default class Authentication extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { isConnected } = this.props;\n        this.state = {\n            modal: false,\n            registerByDefault: true,\n            isConnected: isConnected,\n            dropdownOpen: false,\n        };\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    displayDropdownAccount = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    render() {\n        const { isConnected, modal, registerByDefault, dropdownOpen } = this.state;\n        const { login, logout } = this.props;\n\n        return (\n            <>\n\n                {isConnected ?\n                    <Dropdown\n                        nav\n                        direction='left'\n                        isOpen={dropdownOpen}\n                        toggle={this.displayDropdownAccount}\n                    >\n\n                        <DropdownToggle nav>\n                            <FontAwesomeIcon icon='user' className='user-icon' />\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <Link to='/account'>\n                                <DropdownItem>Mon compte</DropdownItem>\n                            </Link>\n                            <Link to='/' onClick={logout}>\n                                <DropdownItem>Déconnexion</DropdownItem>\n                            </Link>\n                        </DropdownMenu>\n                    </Dropdown>\n                    :\n                    <>\n                        <FontAwesomeIcon onClick={this.displayModal} icon='user' className='user-icon' />\n\n                        <Modal isOpen={modal} fade={false} toggle={this.displayModal}>\n\n                            <div className='modal-header'>\n                                <ModalHeader\n                                    className={registerByDefault === true ? 'active' : ''}\n                                    onClick={() => this.setState({ registerByDefault: true })}\n                                >Inscription\n                                </ModalHeader>\n                                <ModalHeader\n                                    className={registerByDefault === true ? '' : 'active'}\n                                    onClick={() => this.setState({ registerByDefault: false })}\n                                >Connexion\n                                </ModalHeader>\n                            </div>\n\n                            {registerByDefault ?\n                                <Register\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                                :\n                                <Connect\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                            }\n                        </Modal>\n                    </>\n                }\n\n            </>\n        );\n    }\n\n}\n","import React from 'react';\nimport {\n    Collapse, Navbar, NavbarToggler, Dropdown,\n    Nav, NavItem, DropdownMenu, DropdownItem, DropdownToggle,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport Authentication from './authentication/Authentication';\n\nexport default class Menu extends React.Component {\n\n    state = {\n        responsiveNavBarMode: false,\n        dropdownOpen: false,\n    }\n\n    toggle = () => {\n        this.setState(previousState => ({\n            responsiveNavBarMode: !previousState.responsiveNavBarMode,\n        }));\n    }\n\n    displayDropdownCircuits = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    render() {\n        const { responsiveNavBarMode, dropdownOpen } = this.state;\n        const { isConnected, login, logout } = this.props;\n\n        return (\n            <div>\n                <Navbar expand='md' fixed='top'>\n                    <Link to='/'>\n                        <img src='/img/logoGeoScoutWhite.png' className='logo' alt='GeoScout' />\n                    </Link>\n                    <NavbarToggler onClick={this.toggle} />\n\n                    {isConnected ?\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\n                            <Nav className='ml-auto' navbar>\n                                <Dropdown\n                                    nav\n                                    isOpen={dropdownOpen}\n                                    toggle={this.displayDropdownCircuits}\n                                >\n                                    <DropdownToggle nav caret>\n                                        Circuits\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <Link to='/circuits'>\n                                            <DropdownItem>Créés</DropdownItem>\n                                        </Link>\n                                        <Link to='/achievements'>\n                                            <DropdownItem>Réalisés</DropdownItem>\n                                        </Link>\n                                        <Link to='/todo'>\n                                            <DropdownItem>Ma liste</DropdownItem>\n                                        </Link>\n                                    </DropdownMenu>\n                                </Dropdown>\n                                <Authentication isConnected={isConnected} logout={logout} />\n                            </Nav>\n                        </Collapse>\n\n                        :\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\n                            <Nav className='flex-end' navbar>\n                                <NavItem>\n                                    <Authentication isConnected={isConnected} login={login} />\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    }\n\n                </Navbar>\n            </div>\n        );\n    }\n\n}\n","import React, { PureComponent } from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n\nexport default class Pin extends PureComponent {\n\n    render() {\n        const { onClick, index } = this.props;\n        let x = 8;\n\n        const pinStyle = {\n            cursor: 'pointer',\n            fill: this.props.color,\n            stroke: 'none',\n        };\n\n        if (index === 11) {\n            x = 6;\n        } else if (index > 9) {\n            x = 5;\n        } else if (index === 1 || index === 7) {\n            x = 9;\n        }\n\n        return (\n            <svg\n                height={25}\n                viewBox='0 0 24 24'\n                style={{ ...pinStyle }}\n                onClick={onClick}\n            >\n                <path d={ICON} />\n                <text x={x} y={15} fill='white' fontSize={13}>{index}</text>\n\n            </svg>\n        );\n    }\n\n}\n","import React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport Pin from './Pin';\nimport MAP_STYLE from '../utils/map-style-basic.json';\n\n/* Map de création de circuits */\nexport default class Map extends React.Component {\n\n    state = {\n        viewport: {\n            width: '100%',\n            height: window.innerHeight - 50,\n            latitude: 48.582651,\n            longitude: 7.749534,\n            zoom: 12,\n        },\n    }\n\n    componentDidMount() {\n        // Récupération de la position de l'utilisateur\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((data) => {\n                const { viewport } = this.state;\n                viewport.latitude = data.coords.latitude;\n                viewport.longitude = data.coords.longitude;\n\n                this.setState({\n                    viewport: viewport,\n                    userPosition: data.coords,\n                });\n            });\n        }\n    }\n\n    centerFirstSteps = () => {\n        const { steps } = this.props;\n        const { viewport } = this.state;\n        viewport.latitude = steps[0].latitude;\n        viewport.longitude = steps[0].longitude;\n\n        this.setState({\n            viewport: viewport,\n        });\n    }\n\n    render() {\n        const {\n            steps, circuits, onClickMap, onClickMarker, className,\n        } = this.props;\n        const { viewport, userPosition } = this.state;\n\n        return (\n            <div className={className}>\n                <ReactMapGL\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\n                    {...viewport}\n                    mapStyle={MAP_STYLE}\n                    onViewportChange={viewport => this.setState({ viewport })}\n                    onClick={onClickMap}\n                >\n                    {userPosition &&\n                        <Marker\n                            latitude={userPosition.latitude}\n                            longitude={userPosition.longitude}\n                            offsetLeft={-10}\n                            offsetTop={-20}\n                        >\n                            <Pin color='#cc0000' />\n                        </Marker>\n                    }\n                    { /* Affichage des étapes dans le cas de la création/update de circuit */}\n                    {steps && steps.map((s, idx) => <Marker\n                        key={s.id_step}\n                        latitude={s.latitude}\n                        longitude={s.longitude}\n                        offsetLeft={-11}\n                        offsetTop={-25}\n                    >\n                        <Pin color='#1f7a1f' index={s.order} onClick={() => onClickMarker(s)} />\n                    </Marker>)}\n                    { /* Affichage des circuits dans le cas de la map de la homepage */}\n                    {circuits && circuits.map((c, idx) => {\n                        if (c.latitude && c.longitude) {\n                            return (\n                                <Marker\n                                    key={idx}\n                                    latitude={c.latitude}\n                                    longitude={c.longitude}\n                                    offsetLeft={-11}\n                                    offsetTop={-25}\n                                >\n                                    <Pin color='#0066cc' onClick={() => onClickMarker(c)} />\n                                </Marker>\n                            );\n                        }\n                        return null;\n                    })}\n                </ReactMapGL>\n            </div>\n        );\n    }\n\n}\n","const API_HOST = process.env.REACT_APP_API_URL;\n\nfunction request(route, method, body) {\n    const options = {\n        method: method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    if (localStorage.getItem('token')) {\n        options.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n    }\n\n    if (body) {\n        options.body = JSON.stringify(body);\n    }\n\n    return fetch(API_HOST + route, options)\n        .then(checkStatus);\n}\n\nfunction checkStatus(response) {\n    if (response.ok) {\n        if (response.status === 204)\n            return Promise.resolve();\n        return Promise.resolve(response.json());\n    }\n    return Promise.reject({ code: response.status, text: response.text });\n}\n\nexport default {\n    get: route => request(route, 'GET'),\n    post: (route, body) => request(route, 'POST', body),\n    put: (route, body) => request(route, 'PUT', body),\n    delete: route => request(route, 'DELETE'),\n};\n","import React, { Component } from 'react';\n\nimport Map from '../components/Map';\nimport api from '../utils/httpMethods';\n\nexport default class Home extends Component {\n\n    state = {\n        circuits: [],\n    }\n\n\n    componentDidMount() {\n        api.get('circuits').then((data) => {\n            this.setState({\n                circuits: data,\n            });\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    render() {\n        const { circuits } = this.state;\n\n        return (\n            <Map className='map' circuits={circuits} />\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Account extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Mon compte</h1>\n            </>\n        );\n    }\n\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { Tooltip } from 'reactstrap';\n\nexport default withRouter(({\n    id_circuit,\n    name,\n    description,\n    length,\n    duration,\n    published,\n    version,\n    level,\n    history,\n}) => {\n\n    let classLevel;\n    switch (level) {\n        case '1':\n            classLevel = 'medium';\n            break;\n        case '2':\n            classLevel = 'hard';\n            break;\n        default:\n            classLevel = 'easy';\n            break;\n    }\n\n    return (\n        <>\n            <li className='list-item' onClick={() => history.push(`circuit/${id_circuit}`)}>\n\n                <h3 className='item-name'>{name}</h3>\n                <p>{description && description}</p>\n                <p>{length && `${length} km`}</p>\n                <p>{duration && `${length} heures`}</p>\n                <p className='version-item'>{version && `Version : ${version}`}</p>\n                <FontAwesomeIcon\n                    icon='align-justify'\n                    className='published-item'\n                    color={published == 1 ? '#27ae60' : 'white'}\n                />\n                <span className={`level-item ${classLevel}`} />\n\n            </li>\n        </>\n    );\n});\n","import React from 'react';\nimport CreatedCircuitListItem from './CreatedCircuitListItem';\n\nexport default ({ items = [] }) => (\n\n    <ul className='item-wrapper'>\n        {items.map(item => <CreatedCircuitListItem key={item.id_circuit} {...item} />)}\n    </ul>\n\n);\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter, Form, FormGroup,\n    Label, Input, Modal, ModalHeader\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nimport api from '../../utils/httpMethods';\n\nclass CreateCircuitModal extends Component {\n\n    state = {\n        name: '',\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const { name } = this.state;\n        const { displayModal } = this.props;\n        api.post('circuit', {\n            name: name,\n        }).then((data) => {\n            displayModal();\n            const { history } = this.props;\n            history.push(`/circuit/${data.id_circuit}`);\n        }).catch(error => console.log(error));\n    }\n\n    render() {\n        const { name } = this.state;\n        const { modal, displayModal } = this.props;\n\n        return (\n            <>\n                <Modal\n                    isOpen={modal}\n                    fade={false}\n                    toggle={displayModal}\n                >\n                    <ModalHeader>Nouveau circuit</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Nom</Label>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    value={name}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button\n                            color='primary'\n                            onClick={this.handleSubmit}\n                        >Créer\n                        </Button>\n                        <Button\n                            color='secondary'\n                            onClick={displayModal}\n                        >Annuler\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(CreateCircuitModal);\n","import React, { Component } from 'react';\nimport {\n    ButtonDropdown, DropdownToggle,\n    DropdownMenu, DropdownItem, Button,\n} from 'reactstrap';\n\nimport '../css/app.css';\nimport CreatedCircuitList from '../components/circuit/CreatedCircuitList';\nimport CreateCircuitModal from '../components/circuit/CreateCircuitModal';\n\nimport api from '../utils/httpMethods';\n\nexport default class CreatedCircuit extends Component {\n\n    state = {\n        dropdownOpen: false,\n        filter: 'Tous',\n        modal: false,\n        circuits: [],\n    };\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    onFilterClick = (event) => {\n        this.setState({ filter: event.target.name });\n    }\n\n    componentDidMount = () => {\n        api.get('my-circuits').then((data) => {\n            this.setState({ circuits: data });\n        }).catch(error => console.log(error));\n    }\n\n    render() {\n        const { dropdownOpen, modal, filter, circuits } = this.state;\n        const showPublished = (filter === 'Publiés');\n\n        return (\n            <>\n                <div className='my-circuits-header'>\n\n                    <h1>Circuits créés</h1>\n\n                    <div className='header-buttons'>\n\n                        <ButtonDropdown\n                            direction='left'\n                            className='button-dropdown'\n                            isOpen={dropdownOpen}\n                            toggle={this.toggle}\n                        >\n                            <DropdownToggle caret color='info'>{filter}</DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem\n                                    name='Tous'\n                                    onClick={this.onFilterClick}\n                                >Tous\n                                </DropdownItem>\n                                <DropdownItem\n                                    name='Publiés'\n                                    onClick={this.onFilterClick}\n                                >Publiés\n                                </DropdownItem>\n                                <DropdownItem\n                                    name='Non-publiés'\n                                    onClick={this.onFilterClick}\n                                >Non-publiés\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n\n                        <Button\n                            color='success'\n                            className='create-circuit'\n                            onClick={this.displayModal}\n                        >Création\n                        </Button>\n\n                    </div>\n\n                </div>\n                {filter === 'Tous' ?\n                    <CreatedCircuitList\n                        items={circuits}\n                    />\n                    :\n                    <CreatedCircuitList\n                        items={circuits.filter(element => element.published === (showPublished))}\n                    />\n                }\n\n                <CreateCircuitModal\n                    displayModal={this.displayModal}\n                    modal={modal}\n                />\n            </>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default ({ step, onClickItem, handleDrop }) => (\n    <li className='step-wrapper-item' draggable\n        onClick={() => onClickItem(step)}\n        onDragStart={(e) => handleDragStart(e, step)}\n        onDragOver={(e) => { e.preventDefault(); }}\n        onDrop={(e) => handleDrop(e, step.order)}>\n\n        <div>\n            <span className='step-name'>{step.name}</span>\n        </div>\n\n        <div>\n            <span>{step.description}</span>\n        </div>\n\n        <span className='order-item'>{step.order}</span>\n\n    </li>\n);\n\n/**\n * \n * @param {Event} event \n * @param {Step} step \n */\nfunction handleDragStart(event, step) {\n    event.dataTransfer.setData('id', step.id_step);\n    event.dataTransfer.setData('order', step.order)\n}","import React from 'react';\nimport StepListItem from './StepListItem';\n\nexport default ({ items = [], onClickItem, handleDrop }) => (\n\n    <ul className='step-wrapper' >\n        {items.map(item => <StepListItem key={item.order} step={item}\n            onClickItem={onClickItem} handleDrop={handleDrop} />)}\n    </ul>\n\n);\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter, Form, FormGroup,\n    Label, Input, Modal, ModalHeader,\n} from 'reactstrap';\n\nimport api from '../../utils/httpMethods';\n\nclass UpdateStepModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        instruction: '',\n        questions: { wording: '', response: '' },\n    };\n\n    componentDidUpdate(prevProps) {\n        const { step } = this.props;\n        if (prevProps.step !== step) {\n            if (step) {\n                this.setState(Object.assign({}, step, {\n                    description: step.description || '',\n                    instruction: step.instruction || '',\n                }));\n                this.fetchQuestion(step.id_step);\n            }\n        }\n    }\n\n    fetchQuestion = (id_step) => {\n        api.get(`step/${id_step}/questions`).then((data) => {\n            if (data.length > 0) {\n                this.setState({\n                    questions: {\n                        id: data[0].id_question || undefined,\n                        wording: data[0].wording || '',\n                        response: data[0].response || ''\n                    }\n                });\n            }\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleChangeQuestion = (event) => {\n        event.persist();\n        this.setState((prev) => {\n            prev.questions[event.target.name] = event.target.value;\n            return { questions: prev.questions };\n        });\n    }\n\n    handleSubmit = () => {\n        const step = this.state;\n        const { displayModal } = this.props;\n        this.props.updateStep(step)\n            .then(() => {\n                this.putQuestion(step.questions);\n                displayModal();\n            })\n            .catch(error => console.log(error));\n    }\n\n    putQuestion(question) {\n        if (question.id) {\n            return api.put(`question/${question.id}`, question)\n        }\n        return api.post('question', Object.assign({ id_step: this.state.id_step }, question))\n\n    }\n\n    render() {\n        const { name, description, instruction, questions: { wording, response } } = this.state;\n        const { open, displayModal } = this.props;\n\n        return (\n            <>\n                <Modal\n                    isOpen={open}\n                    fade={false}\n                    toggle={displayModal}\n                >\n                    <ModalHeader>Modification de l'étape</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Nom</Label>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    value={name}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Description</Label>\n                                <Input\n                                    type='text'\n                                    name='description'\n                                    value={description}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Instruction de direction</Label>\n                                <Input\n                                    type='textarea'\n                                    name='instruction'\n                                    value={instruction}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Intitulé de la question</Label>\n                                <Input\n                                    type='textarea'\n                                    name='wording'\n                                    value={wording}\n                                    onChange={this.handleChangeQuestion}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Réponse</Label>\n                                <Input\n                                    type='text'\n                                    name='response'\n                                    value={response}\n                                    onChange={this.handleChangeQuestion}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button\n                            color='primary'\n                            onClick={this.handleSubmit}\n                        >Modifier\n                        </Button>\n                        <Button\n                            color='secondary'\n                            onClick={displayModal}\n                        >Annuler\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nexport default UpdateStepModal;\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter, Form, FormGroup,\n    Label, Input, Modal, ModalHeader,\n} from 'reactstrap';\n\nclass UpdateCircuitModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        length: '',\n        duration: '',\n    };\n\n    componentDidUpdate(prevProps) {\n        const { circuit } = this.props;\n        if (prevProps.circuit !== circuit) {\n            if (circuit) {\n                this.setState(Object.assign({}, circuit, {\n                    description: circuit.description || '',\n                    instruction: circuit.instruction || '',\n                    length: circuit.length || '',\n                    duration: circuit.duration || '',\n                }));\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const { id_circuit, name, description, length, duration } = this.state;\n        const circuit = {\n            id_circuit: id_circuit,\n            name: name || null,\n            description: description || null,\n            length: length || null,\n            duration: duration || null,\n        };\n        const { displayModal } = this.props;\n        this.props.updateCircuit(circuit)\n            .then(() => displayModal())\n            .catch(error => console.log(error));\n    }\n\n    render() {\n        const { name, description, length, duration } = this.state;\n        const { open, displayModal } = this.props;\n\n        return (\n            <>\n                <Modal\n                    isOpen={open}\n                    fade={false}\n                    toggle={displayModal}\n                >\n                    <ModalHeader>Modification du circuit</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Nom</Label>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    value={name}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Description</Label>\n                                <Input\n                                    type='textarea'\n                                    name='description'\n                                    value={description}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Distance moyenne</Label>\n                                <Input\n                                    type='text'\n                                    name='length'\n                                    value={length}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label>Durée moyenne</Label>\n                                <Input\n                                    type='text'\n                                    name='duration'\n                                    value={duration}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n\n                        </Form>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button\n                            color='primary'\n                            onClick={this.handleSubmit}\n                        >Modifier\n                        </Button>\n                        <Button\n                            color='secondary'\n                            onClick={displayModal}\n                        >Annuler\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nexport default UpdateCircuitModal;\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport Map from '../components/Map';\nimport StepList from '../components/step/StepList';\nimport UpdateStepModal from '../components/step/UpdateStepModal';\nimport UpdateCircuitModal from '../components/circuit/UpdateCircuitModal';\n\nimport api from '../utils/httpMethods';\n\nexport default class NewCircuit extends Component {\n\n    state = {\n        circuit: {},\n        steps: [],\n        modalOpen: false,\n        updateCircuitModalOpen: false,\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        if (id) {\n            api.get(`circuit/${id}`).then((circuit) => {\n                api.get(`steps/${id}`).then((steps) => {\n                    this.setState({\n                        circuit: circuit,\n                        steps: steps,\n                    });\n                });\n            }).catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modalOpen: !previousState.modalOpen,\n        }));\n    }\n\n    displayUpdateCircuitModal = () => {\n        this.setState(previousState => ({\n            updateCircuitModalOpen: !previousState.updateCircuitModalOpen,\n        }));\n    }\n\n    onClickItem = (step) => {\n        this.setState({ stepFocus: step });\n        this.displayModal();\n    }\n\n    // Création d'une étape dans la base\n    handleClickMap = (event) => {\n        const { circuit } = this.state;\n        const step = {\n            name: `Etape`,\n            longitude: event.lngLat[0],\n            latitude: event.lngLat[1],\n            id_circuit: circuit.id_circuit,\n        };\n\n        api.post('step', step).then((data) => {\n            this.setState((prev) => {\n                prev.steps.push(data);\n                return { steps: prev.steps };\n            });\n        }).catch(error => console.log(error.text));\n    }\n\n    removeStep = (idx) => {\n        const step = this.state.steps[idx];\n        api.delete(`step/${step.id_step}`).then(() => {\n            // Suppression de l'étape dans la liste\n            this.setState((prev) => {\n                prev.steps.splice(idx, 1);\n                return { steps: prev.steps };\n            });\n        }).catch(error => console.log(error.text));\n    }\n\n    updateStep = step => api.put(`step/${step.id_step}`, step).then(() => {\n        this.setState((prev) => {\n            prev.steps.splice(step.order, 1, step);\n        });\n    })\n\n    updateCircuit = circuit => api.put(`circuit/${circuit.id_circuit}`, circuit).then(() => {\n        this.setState({\n            circuit,\n        });\n    })\n\n    handleDropStep = (event, newOrder) => {\n        let id = event.dataTransfer.getData('id');\n        let oldOrder = event.dataTransfer.getData('order');\n        this.changeStepOrder(oldOrder, newOrder);\n\n        // api.put('order', {\n        //     id: id,\n        //     id_circuit: this.state.circuit.id_circuit,\n        //     previous: oldOrder,\n        //     new: newOrder,\n        // })\n        //     .then(() => this.changeStepOrder(oldOrder, newOrder))\n        //     .catch(error => console.log(error))\n    }\n\n    changeStepOrder = (prevIdx, newIdx) => {\n        this.setState((prev) => {\n            let steps = prev.steps.map((step) => {\n\n                if (step.order == prevIdx) {\n                    step.order = newIdx;\n                } else if (newIdx <= step.order && step.order < prevIdx) {\n                    step.order += 1;\n                } else if (step.order > prevIdx && step.order <= newIdx) {\n                    step.order -= 1;\n                }\n\n                return step;\n            })\n            steps.sort((a, b) => a.order - b.order);\n            return { steps: steps };\n        });\n    }\n\n    render() {\n        const { steps, circuit, stepFocus, modalOpen, updateCircuitModalOpen } = this.state;\n\n        return (\n            <div className='view-wrapper'>\n                <Map\n                    className='new-map'\n                    steps={steps}\n                    onClickMap={this.handleClickMap}\n                    onClickMarker={this.onClickItem}\n                />\n\n                <div className='scroll-menu'>\n\n                    <div className='circuit-title'>\n                        <h3>{circuit.name}</h3>\n                        <Button\n                            className='update-circuit'\n                            color='info'\n                            onClick={this.displayUpdateCircuitModal}\n                        >Modifier\n                        </Button>\n                    </div>\n\n                    <StepList\n                        items={steps}\n                        onClickItem={this.onClickItem}\n                        handleDrop={this.handleDropStep}\n                    />\n\n                </div>\n                <UpdateStepModal\n                    step={stepFocus}\n                    open={modalOpen}\n                    displayModal={this.displayModal}\n                    updateStep={this.updateStep}\n                />\n\n                <UpdateCircuitModal\n                    circuit={circuit}\n                    open={updateCircuitModalOpen}\n                    displayModal={this.displayUpdateCircuitModal}\n                    updateCircuit={this.updateCircuit}\n                />\n\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Achievement extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Circuits réalisés</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Todo extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Ma liste</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faPen, faAlignJustify } from '@fortawesome/free-solid-svg-icons';\n\nimport './css/app.css';\nimport Menu from './components/Menu';\n\nimport Home from './views/Home';\nimport Account from './views/Account';\nimport CreatedCircuit from './views/CreatedCircuit';\nimport NewCircuit from './views/NewCircuit';\nimport Achievement from './views/Achievement';\nimport Todo from './views/Todo';\n\nimport api from './utils/httpMethods';\n\nlibrary.add(faUser, faPen, faAlignJustify);\n\nclass App extends Component {\n\n    state = {\n        isConnected: false,\n        user: {},\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('token')) {\n            api.get('whoami').then((data) => {\n                this.setState({ user: data, isConnected: true });\n            }).catch((error) => {\n                console.log(error);\n                localStorage.removeItem('token');\n            });\n        }\n    }\n\n    login = (route, credentials) => api.post(route, credentials).then((data) => {\n        localStorage.setItem('token', data.token);\n        this.setState({\n            isConnected: true,\n            user: data.user,\n        });\n    })\n\n    logout = () => {\n        localStorage.removeItem('token');\n        this.setState({\n            isConnected: false,\n            user: {},\n        });\n    }\n\n    render() {\n        const { isConnected, user } = this.state;\n        return (\n            <>\n                <div className='menu-wrapper'>\n                    <Menu isConnected={isConnected} login={this.login} logout={this.logout} />\n                </div>\n\n                <Route exact path='/' component={Home} />\n                {isConnected ?\n                    <>\n                        <Route exact path='/account' render={props => <Account {...props} user={user} />} />\n                        <Route exact path='/circuits' component={CreatedCircuit} />\n                        <Route exact path='/circuit/:id' component={NewCircuit} />\n                        <Route exact path='/achievements' component={Achievement} />\n                        <Route exact path='/todo' component={Todo} />\n                    </>\n                    : null}\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // 'Content is cached for offline use.' message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}