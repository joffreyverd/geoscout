{"version":3,"sources":["components/authentication/Connect.js","components/authentication/Register.js","components/authentication/Authentication.js","utils/httpMethods.js","components/circuit/CreateCircuitModal.js","components/Menu.js","components/Pin.js","components/Map.js","components/circuit/CircuitListItem.js","components/circuit/CircuitList.js","views/CircuitsView.js","views/Home.js","views/Account.js","components/step/StepListItem.js","components/step/StepList.js","components/step/UpdateStepModal.js","components/circuit/UpdateCircuitModal.js","views/CircuitPublisher.js","views/Achievement.js","views/Todo.js","views/DetailedCircuit.js","App.js","serviceWorker.js","index.js"],"names":["Connect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_this$setState","setState","defineProperty","target","name","value","undefined","handleSubmit","e","preventDefault","login","state","catch","error","console","log","code","text","email","password","_this$state","displayModal","react_default","a","createElement","Form","onSubmit","ModalBody","FormGroup","Label","Input","type","placeholder","onChange","invalid","FormFeedback","ModalFooter","Button","color","onClick","Component","withRouter","Register","firstname","lastname","repeatPassword","concat","match","length","verifpassword","verifrepeatPassword","user","assign","then","data","verifemail","_this$state2","Authentication","previousState","modal","isConnected","registerByDefault","_this2","_this$props","logout","Fragment","Dropdown","nav","toggle","displayDropdownAccount","DropdownToggle","react_fontawesome_index_es","icon","className","DropdownMenu","Link","to","DropdownItem","Modal","isOpen","fade","ModalHeader","authentication_Register","authentication_Connect","React","API_HOST","process","checkStatus","_callee","response","regenerator_default","wrap","_context","prev","next","ok","status","abrupt","Promise","resolve","json","t0","t1","t2","sent","t3","reject","stop","request","route","method","body","options","headers","Content-Type","localStorage","getItem","authorization","JSON","stringify","fetch","httpMethods","get","post","put","delete","CreateCircuitModal","api","history","push","id_circuit","Menu","responsiveNavBarMode","Navbar","expand","fixed","src","alt","NavbarToggler","Collapse","navbar","Nav","caret","divider","Authentication_Authentication","NavItem","circuit_CreateCircuitModal","Pin","index","x","pinStyle","cursor","fill","stroke","height","viewBox","style","objectSpread","d","y","fontSize","PureComponent","Map","centerStep","step","viewport","changeViewport","latitude","longitude","zoom","_this$props2","steps","circuits","onClickMap","onClickMarker","userPosition","esm","mapboxApiAccessToken","mapStyle","MAP_STYLE","onViewportChange","offsetLeft","offsetTop","Pin_Pin","map","s","key","id_step","order","c","idx","Steps","CircuitListItem","tooltipPublicationOpen","tooltipLevelOpen","publishedStatusToggler","levelToggler","classLevel","description","onHome","duration","version","published","level","Tooltip","placement","autohide","id","CircuitList","_ref","_ref$items","items","item","circuit_CircuitListItem","CircuitsView","dropdownOpen","filter","onFilterClick","componentDidMount","showPublished","ButtonDropdown","direction","element","Home","width","window","innerHeight","distance","onClickItem","navigator","geolocation","getCurrentPosition","coords","_this$state$viewport","user_longitude","user_latitude","_this3","Map_Map","CircuitsView_CircuitsView","lib_default","onToggle","Account","StepListItem","stepFocus","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","StepList","droppableId","backgroundColor","isDraggingOver","droppableProps","UpdateStepModal","instruction","questions","wording","fetchQuestion","id_question","handleChangeQuestion","persist","displayUpdateStep","alert","updateStep","putQuestion","success","prevProps","question","_this$state$questions","show","removeStep","withAlert","UpdateCircuitModal","displayUpdateCircuit","circuit","updateCircuit","CircuitPublisher","circuitIsDisplayed","stepIsDisplayed","handleClickMap","lngLat","findIndex","splice","dragEnd","dropResult","destination","prevOrder","source","newOrder","changeStepOrder","previous","new","parseInt","sort","b","params","onDragEnd","goBack","step_UpdateStepModal","circuit_UpdateCircuitModal","Achievement","Todo","DetailedCircuit","_this$state$circuit","need_internet","createdAt","updatedAt","library","add","faUser","faPen","faAlignJustify","App","credentials","setItem","token","removeItem","Menu_Menu","Route","exact","path","component","render","Account_Account","Boolean","location","hostname","timeout","transition","position","positions","TOP_CENTER","containerStyle","zIndex","ReactDOM","BrowserRouter","react_alert","template","AlertTemplate","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8892594.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter,\n    Form, FormGroup, FormFeedback, Label, Input\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Connect extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: undefined\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.login('signin', this.state).catch((error) => {\n            console.log(error);\n            if (error.code === 401)\n                this.setState({ error: error.text })\n        });\n    }\n\n    render() {\n\n        const { email, password, error } = this.state;\n        const { displayModal } = this.props;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Email</Label>\n                        <Input\n                            type='email'\n                            name='email'\n                            placeholder='Indiquez votre email'\n                            value={email}\n                            onChange={this.handleChange}\n                            invalid={error}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Mot de passe</Label>\n                        <Input\n                            type='password'\n                            name='password'\n                            placeholder='Indiquez votre mot de passe'\n                            value={password}\n                            onChange={this.handleChange}\n                            invalid={error}\n                        />\n                        <FormFeedback>{error}</FormFeedback>\n                    </FormGroup>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        type='submit'\n                        onClick={this.handleSubmit}\n                    >Connexion\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </Form>\n        );\n    }\n\n}\n\nexport default withRouter(Connect);\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter,\n    Form, FormGroup, Label, Input, FormFeedback,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Register extends Component {\n\n    state = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        repeatPassword: '',\n    };\n\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            [`verif${event.target.name}`]: undefined,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {\n            email,\n            password,\n            repeatPassword,\n        } = this.state;\n\n\n        // Vérification du format d'email\n        if (!email.match(/^[\\w-.]+@[\\w-]+\\.\\w+$/g)) {\n            this.setState({ verifemail: true });\n        } else if (password.length < 8) {\n            this.setState({ verifpassword: true });\n        } else if (repeatPassword !== password) {\n            this.setState({ verifrepeatPassword: true });\n        } else {\n            // Copie du state dans un nouvel objet pour pouvoir supprimer des propriétés\n            const user = Object.assign({}, this.state);\n            delete user.repeatPassword;\n\n            this.props.login('signup', user).then((data) => {\n                // success\n            }).catch((error) => {\n                // error\n            });\n        }\n\n    }\n\n    render() {\n        const { firstname, lastname, email, password, repeatPassword,\n            verifemail, verifpassword, verifrepeatPassword } = this.state;\n        const { displayModal } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Nom</Label>\n                        <Input\n                            type='text'\n                            name='lastname'\n                            onChange={this.handleChange}\n                            value={lastname}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Prénom</Label>\n                        <Input\n                            type='text'\n                            name='firstname'\n                            onChange={this.handleChange}\n                            value={firstname}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Email</Label>\n                        <Input\n                            type='email'\n                            name='email'\n                            onChange={this.handleChange}\n                            value={email}\n                            invalid={verifemail}\n                        />\n                        <FormFeedback>Ce n'est pas une adresse valide</FormFeedback>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Mot de passe</Label>\n                        <Input\n                            type='password'\n                            name='password'\n                            placeholder='8 caractères minimum'\n                            onChange={this.handleChange}\n                            value={password}\n                            invalid={verifpassword}\n                        />\n                        <FormFeedback>Votre mot de passe doit faire plus de 8 caractères</FormFeedback>\n                    </FormGroup>\n                    <FormGroup>\n                        <Input\n                            type='password'\n                            name='repeatPassword'\n                            placeholder='Répétez votre mot de passe'\n                            onChange={this.handleChange}\n                            value={repeatPassword}\n                            invalid={verifrepeatPassword}\n                        />\n                        <FormFeedback>Vos mots de passes ne correspondent pas</FormFeedback>\n                    </FormGroup>\n\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        type='submit'\n                        onClick={this.handleSubmit}\n                    >Inscription\n                    </Button>\n                    <Button\n                        color='secondary'\n                        onClick={displayModal}\n                    >Annuler\n                    </Button>\n                </ModalFooter>\n            </Form>\n        );\n    }\n\n}\n\nexport default withRouter(Register);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    Modal, ModalHeader, DropdownToggle,\n    DropdownMenu, DropdownItem, Dropdown,\n} from 'reactstrap';\n\nimport Connect from './Connect';\nimport Register from './Register';\n\nexport default class Authentication extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { isConnected } = this.props;\n        this.state = {\n            modal: false,\n            registerByDefault: true,\n            isConnected: isConnected,\n        };\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    render() {\n        const { isConnected, modal, registerByDefault } = this.state;\n        const { login, logout } = this.props;\n\n        return (\n            <>\n\n                {isConnected ?\n                    <Dropdown\n                        nav\n                        toggle={this.displayDropdownAccount}\n                    >\n\n                        <DropdownToggle nav>\n                            <FontAwesomeIcon icon='user' className='user-icon' />\n                        </DropdownToggle>\n                        <DropdownMenu className='account-dropdown'>\n                            <Link to='/account'>\n                                <DropdownItem>Mon compte</DropdownItem>\n                            </Link>\n                            <Link to='/' onClick={logout}>\n                                <DropdownItem>Déconnexion</DropdownItem>\n                            </Link>\n                        </DropdownMenu>\n                    </Dropdown>\n                    :\n                    <>\n                        <p onClick={this.displayModal} className='auth-text'>Autentification</p>\n\n                        <Modal isOpen={modal} fade={false} toggle={this.displayModal}>\n\n                            <div className='modal-header'>\n                                <ModalHeader\n                                    className={registerByDefault === true ? 'active' : ''}\n                                    onClick={() => this.setState({ registerByDefault: true })}\n                                >Inscription\n                                </ModalHeader>\n                                <ModalHeader\n                                    className={registerByDefault === true ? '' : 'active'}\n                                    onClick={() => this.setState({ registerByDefault: false })}\n                                >Connexion\n                                </ModalHeader>\n                            </div>\n\n                            {registerByDefault ?\n                                <Register\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                                :\n                                <Connect\n                                    displayModal={this.displayModal}\n                                    modal={modal}\n                                    login={login}\n                                />\n                            }\n                        </Modal>\n                    </>\n                }\n\n            </>\n        );\n    }\n\n}\n","const API_HOST = process.env.REACT_APP_API_URL;\n\n/**\n *\n * @param {*} response\n */\nasync function checkStatus(response) {\n    if (response.ok) {\n        if (response.status === 204) return Promise.resolve();\n        return Promise.resolve(response.json());\n    }\n    return Promise.reject({ code: response.status, text: await response.text() });\n}\n\n\n/**\n * Fonction d'envoie d'une requête au serveur\n * @param {String} route : La route de la requête (sans l'url du serveur)\n * @param {String} method : La méthode de la requête\n * @param {Object} body : Un objet représentant le body de la requête\n */\nfunction request(route, method, body) {\n    const options = {\n        method: method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    if (localStorage.getItem('token')) {\n        options.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n    }\n\n    if (body) {\n        options.body = JSON.stringify(body);\n    }\n\n    return fetch(API_HOST + route, options)\n        .then(checkStatus);\n}\n\n\nexport default {\n    get: route => request(route, 'GET'),\n    post: (route, body) => request(route, 'POST', body),\n    put: (route, body) => request(route, 'PUT', body),\n    delete: route => request(route, 'DELETE'),\n};\n","import React, { Component } from 'react';\nimport {\n    Button, ModalBody, ModalFooter, Form, FormGroup,\n    Label, Input, Modal, ModalHeader\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nimport api from '../../utils/httpMethods';\n\nclass CreateCircuitModal extends Component {\n\n    state = {\n        name: '',\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const { name } = this.state;\n        const { displayModal } = this.props;\n        api.post('circuit', {\n            name: name,\n        }).then((data) => {\n            displayModal();\n            const { history } = this.props;\n            history.push(`/circuit/${data.id_circuit}`);\n        }).catch(error => console.log(error));\n    }\n\n    render() {\n        const { name } = this.state;\n        const { modal, displayModal } = this.props;\n\n        return (\n            <>\n                <Modal\n                    isOpen={modal}\n                    fade={false}\n                    toggle={displayModal}\n                >\n                    <ModalHeader>Nouveau circuit</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label>Nom</Label>\n                                <Input\n                                    type='text'\n                                    name='name'\n                                    value={name}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button\n                            color='primary'\n                            onClick={this.handleSubmit}\n                        >Créer\n                        </Button>\n                        <Button\n                            color='secondary'\n                            onClick={displayModal}\n                        >Annuler\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(CreateCircuitModal);\n","import React from 'react';\nimport {\n    Collapse, Navbar, NavbarToggler, Dropdown,\n    Nav, NavItem, DropdownMenu, DropdownItem, DropdownToggle,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport Authentication from './authentication/Authentication';\nimport CreateCircuitModal from './circuit/CreateCircuitModal';\n\nexport default class Menu extends React.Component {\n\n    state = {\n        responsiveNavBarMode: false,\n        modal: false,\n    }\n\n    toggle = () => {\n        this.setState(previousState => ({\n            responsiveNavBarMode: !previousState.responsiveNavBarMode,\n        }));\n    }\n\n    displayModal = () => {\n        this.setState(previousState => ({\n            modal: !previousState.modal,\n        }));\n    }\n\n    render() {\n        const { responsiveNavBarMode, modal } = this.state;\n        const { isConnected, login, logout } = this.props;\n\n        return (\n            <div>\n                <Navbar expand='md' fixed='top'>\n                    <Link to='/'>\n                        <img src='/img/logoGeoScoutWhite.png' className='logo' alt='GeoScout' />\n                    </Link>\n                    <NavbarToggler onClick={this.toggle} />\n\n                    {isConnected ?\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\n                            <Nav className='ml-auto' navbar>\n                                <Dropdown nav>\n                                    <DropdownToggle nav caret>\n                                        Circuits\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <Link to='/circuits'>\n                                            <DropdownItem>Créés</DropdownItem>\n                                        </Link>\n                                        <Link to='/achievements'>\n                                            <DropdownItem>Réalisés</DropdownItem>\n                                        </Link>\n                                        <Link to='/todo'>\n                                            <DropdownItem>Ma liste</DropdownItem>\n                                        </Link>\n                                        <DropdownItem divider />\n                                        <DropdownItem\n                                            onClick={this.displayModal}\n                                            className='create-circuit'\n                                        >Créer un circuit\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </Dropdown>\n                                <Authentication isConnected={isConnected} logout={logout} />\n                            </Nav>\n                        </Collapse>\n\n                        :\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\n                            <Nav className='flex-end' navbar>\n                                <NavItem>\n                                    <Authentication isConnected={isConnected} login={login} />\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    }\n\n                </Navbar>\n\n                <CreateCircuitModal\n                    displayModal={this.displayModal}\n                    modal={modal}\n                />\n\n            </div>\n        );\n    }\n\n}\n","import React, { PureComponent } from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n\nexport default class Pin extends PureComponent {\n\n    render() {\n        const { onClick, index } = this.props;\n        let x = 8;\n\n        const pinStyle = {\n            cursor: 'pointer',\n            fill: this.props.color,\n            stroke: 'none',\n        };\n\n        if (index === 11) {\n            x = 6;\n        } else if (index > 9) {\n            x = 5;\n        } else if (index === 1 || index === 7) {\n            x = 9;\n        }\n\n        return (\n            <svg\n                height={25}\n                viewBox='0 0 24 24'\n                style={{ ...pinStyle }}\n                onClick={onClick}\n            >\n                <path d={ICON} />\n                <text x={x} y={15} fill='white' fontSize={13}>{index}</text>\n\n            </svg>\n        );\n    }\n\n}\n","import React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport Pin from './Pin';\nimport MAP_STYLE from '../utils/map-style-basic.json';\n\n/* Map de création de circuits */\nexport default class Map extends React.Component {\n\n    centerStep = (step) => {\n        const { viewport, changeViewport } = this.props;\n        viewport.latitude = step.latitude;\n        viewport.longitude = step.longitude + 0.03;\n        viewport.zoom = 12;\n        changeViewport(viewport);\n    }\n\n    render() {\n        const {\n            steps, circuits, onClickMap, onClickMarker,\n            className, viewport, userPosition, changeViewport,\n        } = this.props;\n\n        return (\n            <div className={className}>\n                <ReactMapGL\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\n                    {...viewport}\n                    mapStyle={MAP_STYLE}\n                    onViewportChange={changeViewport}\n                    onClick={onClickMap}\n                >\n                    {userPosition &&\n                        <Marker\n                            latitude={userPosition.latitude}\n                            longitude={userPosition.longitude}\n                            offsetLeft={-10}\n                            offsetTop={-20}\n                        >\n                            <Pin color='#cc0000' />\n                        </Marker>\n                    }\n                    { /* Affichage des étapes dans le cas de la création/update de circuit */}\n                    {steps && steps.map(s => <Marker\n                        key={s.id_step}\n                        latitude={s.latitude}\n                        longitude={s.longitude}\n                        offsetLeft={-11}\n                        offsetTop={-25}\n                    >\n                        <Pin\n                            color='#1f7a1f'\n                            index={s.order}\n                            onClick={() => {\n                                onClickMarker(s);\n                                this.centerStep(s);\n                            }}\n                        />\n                                             </Marker>)}\n                    { /* Affichage des circuits dans le cas de la map de la homepage */}\n                    {circuits && circuits.map((c, idx) => {\n                        if (c.Steps[0].latitude && c.Steps[0].longitude) {\n                            return (\n                                <Marker\n                                    key={idx}\n                                    latitude={c.Steps[0].latitude}\n                                    longitude={c.Steps[0].longitude}\n                                    offsetLeft={-11}\n                                    offsetTop={-25}\n                                >\n                                    <Pin\n                                        color='#0066cc'\n                                        onClick={() => onClickMarker(c.id_circuit)}\n                                    />\n                                </Marker>\n                            );\n                        }\n                        return null;\n                    })}\n                </ReactMapGL>\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Tooltip } from 'reactstrap';\n\nclass CircuitListItem extends Component {\n\n    state = {\n        tooltipPublicationOpen: false,\n        tooltipLevelOpen: false,\n    };\n\n    publishedStatusToggler = () => {\n        this.setState({\n            tooltipPublicationOpen: !this.state.tooltipPublicationOpen,\n        });\n    }\n\n    levelToggler = () => {\n        this.setState({\n            tooltipLevelOpen: !this.state.tooltipLevelOpen,\n        });\n    }\n\n    render() {\n\n        const {\n            id_circuit, name, description, length, onHome,\n            duration, version, published, level, history,\n        } = this.props;\n        const { tooltipPublicationOpen, tooltipLevelOpen } = this.state;\n\n        let classLevel;\n        switch (level) {\n            case '1':\n                classLevel = 'medium';\n                break;\n            case '2':\n                classLevel = 'hard';\n                break;\n            default:\n                classLevel = 'easy';\n                break;\n        }\n\n        return (\n            <>\n                <li\n                    className='list-item'\n                    onClick={() => (onHome ? history.push(`detail/${id_circuit}`) : history.push(`circuit/${id_circuit}`))}\n                >\n\n                    <h3 className='item-name'>{name}</h3>\n                    <p>{description && description}</p>\n                    <p>{length && `${length} km`}</p>\n                    <p>{duration && `${length} heures`}</p>\n                    <p className='version-item'>{version && `Version : ${version}`}</p>\n\n                    {!onHome &&\n                        <>\n                            <Tooltip\n                                placement='top'\n                                isOpen={tooltipPublicationOpen}\n                                autohide={false}\n                                target={`published${id_circuit}`}\n                                toggle={this.publishedStatusToggler}\n                            >\n                                {published === true ? 'Publié' : 'Non-publié'}\n                            </Tooltip>\n                            <FontAwesomeIcon\n                                id={`published${id_circuit}`}\n                                icon='align-justify'\n                                className='published-item'\n                                color={published === true ? '#27ae60' : 'white'}\n                            />\n                        </>\n                    }\n                    <Tooltip\n                        placement='top'\n                        isOpen={tooltipLevelOpen}\n                        autohide={false}\n                        target={`level${id_circuit}`}\n                        toggle={this.levelToggler}\n                    >\n                        {`Difficulté : ${classLevel}`}\n                    </Tooltip>\n                    <span className={`level-item ${classLevel}`} id={`level${id_circuit}`} />\n\n                </li>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(CircuitListItem);\n","import React from 'react';\nimport CircuitListItem from './CircuitListItem';\n\nexport default ({ items = [], onHome }) => (\n\n    <ul className='item-wrapper'>\n        {items.map(item => <CircuitListItem key={item.id_circuit} {...item} onHome={onHome} />)}\n    </ul>\n\n);\n","import React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport '../css/app.css';\nimport CreatedCircuitList from '../components/circuit/CircuitList';\n\nimport api from '../utils/httpMethods';\n\nexport default class CircuitsView extends Component {\n\n    state = {\n        dropdownOpen: false,\n        filter: 'Tous',\n        circuits: [],\n    };\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    onFilterClick = (event) => {\n        this.setState({ filter: event.target.name });\n    }\n\n    componentDidMount = () => {\n        const { onHome, circuits } = this.props;\n        if (onHome) {\n            this.setState({\n                circuits: circuits,\n            });\n        } else {\n            api.get('my-circuits').then((data) => {\n                this.setState({ circuits: data });\n            }).catch(error => console.log(error));\n        }\n    }\n\n    render() {\n        const { dropdownOpen, filter, circuits } = this.state;\n        const { onHome } = this.props;\n        const showPublished = (filter === 'Publiés');\n\n        return (\n            <>\n                <div className='my-circuits-header'>\n\n                    {onHome\n                        ?\n                        <h1>Circuits environnants</h1>\n\n                        :\n                        <>\n                            <h1>Circuits créés</h1>\n\n                            <div className='header-buttons'>\n\n                                <ButtonDropdown\n                                    direction='left'\n                                    className='button-dropdown'\n                                    isOpen={dropdownOpen}\n                                    toggle={this.toggle}\n                                >\n                                    <DropdownToggle caret color='info'>{filter}</DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem\n                                            name='Tous'\n                                            onClick={this.onFilterClick}\n                                        >Tous\n                                        </DropdownItem>\n                                        <DropdownItem\n                                            name='Publiés'\n                                            onClick={this.onFilterClick}\n                                        >Publiés\n                                        </DropdownItem>\n                                        <DropdownItem\n                                            name='Non-publiés'\n                                            onClick={this.onFilterClick}\n                                        >Non-publiés\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </ButtonDropdown>\n                            </div>\n                        </>\n                    }\n\n                </div>\n                {filter === 'Tous' ?\n                    <CreatedCircuitList\n                        items={circuits}\n                        onHome={onHome}\n                    />\n                    :\n                    <CreatedCircuitList\n                        items={circuits.filter(element => element.published === (showPublished))}\n                    />\n                }\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport ToggleButton from 'react-toggle-button';\n\nimport Map from '../components/Map';\nimport api from '../utils/httpMethods';\nimport CircuitsView from './CircuitsView';\n\nexport default class Home extends Component {\n\n    state = {\n        circuits: [],\n        value: false,\n        onHome: true,\n        viewport: {\n            width: '100%',\n            height: window.innerHeight - 50,\n            latitude: 48.582651,\n            longitude: 7.749534,\n            distance: 30,\n            zoom: 12,\n        },\n    }\n\n    componentDidMount() {\n        // Récupération de la position de l'utilisateur\n        // eslint-disable-next-line no-undef\n        if (navigator.geolocation) {\n            // eslint-disable-next-line no-undef\n            navigator.geolocation.getCurrentPosition((data) => {\n                const { viewport } = this.state;\n                viewport.latitude = data.coords.latitude;\n                viewport.longitude = data.coords.longitude;\n\n                this.setState({\n                    viewport: viewport,\n                    userPosition: data.coords,\n                });\n            });\n        }\n        const { viewport: { longitude, latitude, distance } } = this.state;\n        const body = {\n            user_longitude: longitude,\n            user_latitude: latitude,\n            distance: distance,\n        };\n        api.post('circuit/nearby', body).then((data) => {\n            this.setState({\n                circuits: data,\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    changeViewport = (viewport) => {\n        this.setState({\n            viewport: viewport,\n        });\n    }\n\n    onClickItem = (id_circuit) => {\n        const { history } = this.props;\n        console.log(this.state);\n        if (id_circuit) {\n            history.push(`detail/${id_circuit}`);\n        }\n    }\n\n    render() {\n        const { circuits, value, onHome, viewport, userPosition } = this.state;\n\n        return (\n            <>\n                {value === false\n                    ?\n                    <Map\n                        className='map'\n                        circuits={circuits}\n                        viewport={viewport}\n                        userPosition={userPosition}\n                        changeViewport={this.changeViewport}\n                        onClickMarker={this.onClickItem}\n                    />\n                    :\n                    <CircuitsView\n                        onHome={onHome}\n                        circuits={circuits}\n                    />\n                }\n\n                <div className='toggle-button'>\n                    <p>Liste</p>\n                    <ToggleButton\n                        value={value || false}\n                        onToggle={(value) => {\n                            this.setState({\n                                value: !value,\n                            });\n                        }}\n                    />\n                </div>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Account extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Mon compte</h1>\n            </>\n        );\n    }\n\n}\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nexport default ({ step, onClickItem, stepFocus }) => (\n    <Draggable\n        draggableId={step.id_step}\n        index={step.order}\n    >\n        {(provided, snapshot) => (\n            <li\n                className={`step-wrapper-item ${stepFocus && step.id_step === stepFocus.id_step && 'focus-step'}`}\n                onClick={() => onClickItem(step)}\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n            >\n\n                <div>\n                    <span className='step-name'>{step.name}</span>\n                </div>\n\n                <div>\n                    <span>{step.description}</span>\n                </div>\n\n                <span className='order-item'>{step.order}</span>\n\n            </li>\n        )}\n    </Draggable>\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport StepListItem from './StepListItem';\n\nexport default ({ items = [], onClickItem, stepFocus }) => (\n    <Droppable droppableId='drop-step' type='STEP'>\n        {(provided, snapshot) => (\n            <ul\n                className='step-wrapper'\n                ref={provided.innerRef}\n                style={{ backgroundColor: snapshot.isDraggingOver && '#65D8C1' }}\n                {...provided.droppableProps}\n            >\n                {items.map(item => <StepListItem\n                    key={item.order}\n                    step={item}\n                    onClickItem={onClickItem}\n                    stepFocus={stepFocus}\n                />)}\n                {provided.placeholder}\n            </ul>\n        )}\n    </Droppable>\n\n);\n","import React, { Component } from 'react';\nimport { withAlert } from 'react-alert';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport api from '../../utils/httpMethods';\n\nclass UpdateStepModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        instruction: '',\n        questions: { wording: '', response: '' },\n    };\n\n    componentDidUpdate(prevProps) {\n        const { step } = this.props;\n        if (prevProps.step !== step) {\n            if (step) {\n                this.setState(Object.assign({}, step, {\n                    description: step.description || '',\n                    instruction: step.instruction || '',\n                    questions: step.questions || {\n                        wording: '',\n                        response: '',\n                    },\n                }));\n                this.fetchQuestion(step.id_step);\n            }\n        }\n    }\n\n    fetchQuestion = (id_step) => {\n        api.get(`step/${id_step}/questions`).then((data) => {\n            if (data.length > 0) {\n                this.setState({\n                    questions: {\n                        id: data[0].id_question || undefined,\n                        wording: data[0].wording || '',\n                        response: data[0].response || '',\n                    },\n                });\n            }\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleChangeQuestion = (event) => {\n        event.persist();\n        this.setState((prev) => {\n            prev.questions[event.target.name] = event.target.value;\n            return { questions: prev.questions };\n        });\n    }\n\n    handleSubmit = () => {\n        const step = this.state;\n        const { displayUpdateStep, alert } = this.props;\n        this.props.updateStep(step)\n            .then(() => {\n                this.putQuestion(step.questions);\n                displayUpdateStep();\n                alert.success('Etape mise à jour');\n            })\n            .catch(() => alert.error('Oups, une erreur s\\'est produite'));\n    }\n\n    putQuestion(question) {\n        if (question.id) {\n            return api.put(`question/${question.id}`, question);\n        }\n        return api.post('question', Object.assign({ id_step: this.state.id_step }, question));\n\n    }\n\n    render() {\n        const { id_step, name, description, instruction, questions: { wording, response } } = this.state;\n        const { show, displayUpdateStep, removeStep } = this.props;\n\n        return (\n            <>\n                <div className={show ? 'update-step' : 'hidden-update-step'}>\n                    <div className='update-title'>\n                        <h3>{'Modification de l\\'étape'}</h3>\n                    </div>\n                    <Form className='update-form' onSubmit={e => e.preventDefault()}>\n                        <FormGroup>\n                            <Label>Nom</Label>\n                            <Input\n                                type='text'\n                                name='name'\n                                value={name}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Description</Label>\n                            <Input\n                                type='textarea'\n                                name='description'\n                                value={description}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Instruction de direction</Label>\n                            <Input\n                                type='textarea'\n                                name='instruction'\n                                value={instruction}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Intitulé de la question</Label>\n                            <Input\n                                type='textarea'\n                                name='wording'\n                                value={wording}\n                                onChange={this.handleChangeQuestion}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Réponse</Label>\n                            <Input\n                                type='textarea'\n                                name='response'\n                                value={response}\n                                onChange={this.handleChangeQuestion}\n                            />\n                        </FormGroup>\n\n                        <div className='update-buttons'>\n                            <Button\n                                type='submit'\n                                color='info'\n                                onClick={this.handleSubmit}\n                            >Modifier\n                            </Button>\n                            <Button\n                                color='danger'\n                                onClick={() => removeStep(id_step)}\n                            >Supprimer\n                            </Button>\n                            <Button\n                                color='secondary'\n                                onClick={displayUpdateStep}\n                            >Annuler\n                            </Button>\n                        </div>\n\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n}\n\nexport default withAlert()(UpdateStepModal);\n","import React, { Component } from 'react';\nimport { withAlert } from 'react-alert';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass UpdateCircuitModal extends Component {\n\n    state = {\n        name: '',\n        description: '',\n        length: '',\n        duration: '',\n    };\n\n    componentDidUpdate(prevProps) {\n        const { circuit } = this.props;\n        if (prevProps.circuit !== circuit) {\n            if (circuit) {\n                this.setState(Object.assign({}, circuit, {\n                    description: circuit.description || '',\n                    instruction: circuit.instruction || '',\n                    length: circuit.length || '',\n                    duration: circuit.duration || '',\n                }));\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        const { id_circuit, name, description, length, duration } = this.state;\n        const { displayUpdateCircuit, alert } = this.props;\n        const circuit = {\n            id_circuit: id_circuit,\n            name: name || null,\n            description: description || null,\n            length: length || null,\n            duration: duration || null,\n        };\n        this.props.updateCircuit(circuit)\n            .then(() => {\n                displayUpdateCircuit();\n                alert.success('Circuit mis à jour');\n            })\n            .catch(() => alert.error('Oups, une erreur s\\'est produite'));\n    }\n\n    render() {\n        const { name, description, length, duration } = this.state;\n        const { show, displayUpdateCircuit } = this.props;\n\n        return (\n            <>\n                <div className={show ? 'update-circuit' : 'hidden-update-circuit'}>\n                    <div className='update-title'>\n                        <h3>Modification du circuit</h3>\n                    </div>\n                    <Form className='update-form'>\n                        <FormGroup>\n                            <Label>Nom</Label>\n                            <Input\n                                type='text'\n                                name='name'\n                                value={name}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Description</Label>\n                            <Input\n                                type='textarea'\n                                name='description'\n                                value={description}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Distance moyenne</Label>\n                            <Input\n                                type='text'\n                                name='length'\n                                value={length}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Durée moyenne</Label>\n                            <Input\n                                type='text'\n                                name='duration'\n                                value={duration}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n\n                        <div className='update-buttons'>\n                            <Button\n                                color='info'\n                                onClick={this.handleSubmit}\n                            >Modifier\n                            </Button>\n                            <Button\n                                color='secondary'\n                                onClick={displayUpdateCircuit}\n                            >Annuler\n                            </Button>\n                        </div>\n\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n}\n\nexport default withAlert()(UpdateCircuitModal);\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport Map from '../components/Map';\nimport StepList from '../components/step/StepList';\nimport UpdateStepModal from '../components/step/UpdateStepModal';\nimport UpdateCircuitModal from '../components/circuit/UpdateCircuitModal';\n\nimport api from '../utils/httpMethods';\n\nexport default class CircuitPublisher extends Component {\n\n    state = {\n        circuit: {},\n        steps: [],\n        circuitIsDisplayed: false,\n        stepIsDisplayed: false,\n        viewport: {\n            width: '100%',\n            height: window.innerHeight - 50,\n            latitude: 48.582651,\n            longitude: 7.749534,\n            distance: 30,\n            zoom: 12,\n        },\n    }\n\n    componentDidMount() {\n        // Récupération de la position de l'utilisateur\n        // eslint-disable-next-line no-undef\n        if (navigator.geolocation) {\n            // eslint-disable-next-line no-undef\n            navigator.geolocation.getCurrentPosition((data) => {\n                const { viewport } = this.state;\n                viewport.latitude = data.coords.latitude;\n                viewport.longitude = data.coords.longitude;\n\n                this.setState({\n                    viewport: viewport,\n                    userPosition: data.coords,\n                });\n            });\n        }\n        const { id } = this.props.match.params;\n        if (id) {\n            api.get(`circuit/${id}`).then((circuit) => {\n                api.get(`steps/${id}`).then((steps) => {\n                    this.setState({\n                        circuit: circuit,\n                        steps: steps,\n                    });\n                });\n            }).catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n\n    changeViewport = (viewport) => {\n        this.setState({\n            viewport: viewport,\n        });\n    }\n\n    /**\n     * Fonction de gestion du clic sur une étape\n     * @param {Object} step : l'objet Step qui a été cliqué\n     */\n    onClickItem = (step) => {\n        this.setState({ stepFocus: step, stepIsDisplayed: true, circuitIsDisplayed: false });\n    }\n\n    /**\n     * Création d'une étape dans la base\n     * @param {Event} event : event envoyé\n     */\n    handleClickMap = (event) => {\n        const { circuit } = this.state;\n        const step = {\n            name: 'Etape',\n            longitude: event.lngLat[0],\n            latitude: event.lngLat[1],\n            id_circuit: circuit.id_circuit,\n        };\n\n        api.post('step', step).then((data) => {\n            this.setState((prev) => {\n                prev.steps.push(data);\n                return { steps: prev.steps };\n            });\n        }).catch(error => console.log(error.text));\n    }\n\n    /**\n     * Suppression d'une étape sur le serveur puis dans le state\n     * @param {Integer} idx : L'index de l'étape dans le tableau steps du state\n     */\n    removeStep = (id_step) => {\n        api.delete(`step/${id_step}`).then(() => {\n            // Suppression de l'étape dans la liste\n            this.setState((prev) => {\n                const idx = prev.steps.findIndex(element => element.id_step === id_step);\n                prev.steps.splice(idx, 1);\n                return { steps: prev.steps };\n            });\n            this.displayUpdateStep();\n        }).catch(error => console.log(error.text));\n    }\n\n    /**\n     * Modification d'une étape\n     * @param {Object} step : L'objet étape modifié\n     */\n    updateStep = step => api.put(`step/${step.id_step}`, step).then(() => {\n        this.setState((prev) => {\n            prev.steps.splice(prev.steps.findIndex(s => s.id_step === step.id_step), 1, step);\n        });\n    })\n\n    /**\n     * Modification du circuit\n     * @param {Object} circuit : L'objet circuit modifié\n     */\n    updateCircuit = circuit => api.put(`circuit/${circuit.id_circuit}`, circuit).then(() => {\n        this.setState({\n            circuit,\n        });\n    })\n\n    displayUpdateCircuit = () => {\n        this.setState(previousState => ({\n            circuitIsDisplayed: !previousState.circuitIsDisplayed,\n            stepIsDisplayed: false,\n            stepFocus: null,\n        }));\n    }\n\n    displayUpdateStep = () => {\n        this.setState(previousState => ({\n            stepIsDisplayed: !previousState.stepIsDisplayed,\n            circuitIsDisplayed: false,\n            stepFocus: null,\n        }));\n    }\n\n    /**\n     * Fonction lancé par le Drag & Drop de la liste d'étape\n     * @param {Object} dropResult : Event lancé par le drop d'un Draggable dans un Droppable\n     */\n    dragEnd = (dropResult) => {\n        if (dropResult.destination) {\n            const {\n                draggableId: id,\n                source: {\n                    index: prevOrder,\n                },\n                destination: {\n                    index: newOrder,\n                },\n            } = dropResult;\n\n\n            const { circuit: { id_circuit } } = this.state;\n\n            this.changeStepOrder(prevOrder, newOrder);\n\n            api.put('step/order', {\n                id: id,\n                id_circuit: id_circuit,\n                previous: prevOrder,\n                new: newOrder,\n            })\n                .then(() => null)\n                .catch((error) => {\n                    console.log(error);\n                    this.changeStepOrder(newOrder, prevOrder);\n                });\n        }\n    }\n\n    /**\n     * Fonction de modification de l'ordre des questions dans le state\n     * @param {Integer} prevOrder : L'ordre de l'étape à déplacer\n     * @param {Integer} newOrder : Le nouvel ordre de l'étape\n     */\n    changeStepOrder = (prevOrder, newOrder) => {\n        this.setState((prev) => {\n            const steps = prev.steps.map((step) => {\n\n                if (step.order === parseInt(prevOrder)) {\n                    step.order = newOrder;\n                } else if (newOrder <= step.order && step.order < prevOrder) {\n                    step.order += 1;\n                } else if (step.order > prevOrder && step.order <= newOrder) {\n                    step.order -= 1;\n                }\n\n                return step;\n            });\n            steps.sort((a, b) => a.order - b.order);\n            return { steps: steps };\n        });\n    }\n\n    render() {\n        const { steps, stepFocus, circuit, circuitIsDisplayed,\n            stepIsDisplayed, userPosition, viewport,\n        } = this.state;\n\n        const { history } = this.props;\n\n        return (\n            <div className='view-wrapper'>\n                <Map\n                    className='new-map'\n                    steps={steps}\n                    onClickMap={this.handleClickMap}\n                    onClickMarker={this.onClickItem}\n                    userPosition={userPosition}\n                    viewport={viewport}\n                    changeViewport={this.changeViewport}\n                />\n\n                <div className='scroll-menu'>\n\n                    <div className='circuit-title'>\n                        <h3>{circuit.name}</h3>\n                        <Button\n                            className='update-circuit-button'\n                            onClick={this.displayUpdateCircuit}\n                            color='info'\n                        >Modifier\n                        </Button>\n                    </div>\n\n                    <DragDropContext\n                        onDragEnd={this.dragEnd}\n                    >\n                        <StepList\n                            items={steps}\n                            onClickItem={this.onClickItem}\n                            stepFocus={stepFocus}\n                        />\n                    </DragDropContext>\n\n                </div>\n\n                <p\n                    className='come-back-button'\n                    onClick={() => history.goBack()}\n                >Valider\n                </p>\n\n                <UpdateStepModal\n                    step={stepFocus}\n                    removeStep={this.removeStep}\n                    updateStep={this.updateStep}\n                    show={stepIsDisplayed}\n                    displayUpdateStep={this.displayUpdateStep}\n                />\n\n                <UpdateCircuitModal\n                    circuit={circuit}\n                    show={circuitIsDisplayed}\n                    displayUpdateCircuit={this.displayUpdateCircuit}\n                    updateCircuit={this.updateCircuit}\n                />\n\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Achievement extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Circuits réalisés</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\n\nexport default class Todo extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Ma liste</h1>\n            </>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\nimport api from '../utils/httpMethods';\n\nexport default class DetailedCircuit extends Component {\n\n    state = {\n        circuit: [],\n    }\n\n    componentDidMount = () => {\n        const { id } = this.props.match.params;\n        api.get(`circuit/${id}`).then((circuit) => {\n            this.setState({\n                circuit: circuit,\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n\n        const { name, description, duration, length, level,\n            need_internet, version, createdAt, updatedAt,\n        } = this.state.circuit;\n\n        return (\n            <>\n                <div className='up-wrapper'>\n                    <h1>{name}</h1>\n\n                    <div className='circuit-score'>\n                        <p>score</p>\n                    </div>\n                </div>\n\n                <div className='bottom-wrapper'>\n                    <div className='circuit-infos'>\n                        <p>{description}</p>\n                        <p>{duration}</p>\n                        <p>{`${length} km`}</p>\n                        <p>{level}</p>\n                        <p>{need_internet}</p>\n                        <p>{version}</p>\n                        <p>{createdAt}</p>\n                        <p>{updatedAt}</p>\n                    </div>\n\n                    <div className='circuit-comments'>\n                        <p>commentaires</p>\n                    </div>\n                </div>\n\n\n            </>\n        );\n    }\n\n}\n\n/*\n    createdAt: \"2019-03-08T08:00:23.000Z\"\n    description: \"Un chouette circuit de présentation du projet Akrobat\"\n    duration: 4\n    id_circuit: 37\n    id_user: 4\n    length: 51\n    level: \"1\"\n    name: \"Circuit Démo\"\n    need_internet: null\n    published: true\n    updatedAt: \"2019-03-08T08:00:23.000Z\"\n    version: 2\n*/\n","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faPen, faAlignJustify } from '@fortawesome/free-solid-svg-icons';\n\nimport './css/app.css';\nimport Menu from './components/Menu';\n\nimport Home from './views/Home';\nimport Account from './views/Account';\nimport CircuitsView from './views/CircuitsView';\nimport CircuitPublisher from './views/CircuitPublisher';\nimport Achievement from './views/Achievement';\nimport Todo from './views/Todo';\nimport DetailedCircuit from './views/DetailedCircuit';\n\nimport api from './utils/httpMethods';\n\nlibrary.add(faUser, faPen, faAlignJustify);\n\nclass App extends Component {\n\n    state = {\n        isConnected: false,\n        user: {},\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('token')) {\n            api.get('whoami').then((data) => {\n                this.setState({ user: data, isConnected: true });\n            }).catch((error) => {\n                console.log(error);\n                localStorage.removeItem('token');\n            });\n        }\n    }\n\n    login = (route, credentials) => api.post(route, credentials).then((data) => {\n        localStorage.setItem('token', data.token);\n        this.setState({\n            isConnected: true,\n            user: data.user,\n        });\n    })\n\n    logout = () => {\n        localStorage.removeItem('token');\n        this.setState({\n            isConnected: false,\n            user: {},\n        });\n    }\n\n    render() {\n        const { isConnected, user } = this.state;\n        return (\n            <>\n                <div className='menu-wrapper'>\n                    <Menu isConnected={isConnected} login={this.login} logout={this.logout} />\n                </div>\n\n                <Route exact path='/' component={Home} />\n                {isConnected ?\n                    <>\n                        <Route exact path='/account' render={props => <Account {...props} user={user} />} />\n                        <Route exact path='/circuits' component={CircuitsView} />\n                        <Route exact path='/circuit/:id' component={CircuitPublisher} />\n                        <Route exact path='/achievements' component={Achievement} />\n                        <Route exact path='/todo' component={Todo} />\n                    </>\n                    : null}\n                <Route exact path='/detail/:id' component={DetailedCircuit} />\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // 'Content is cached for offline use.' message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { positions, Provider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n    timeout: 1500,\n    transition: 'fade',\n    position: positions.TOP_CENTER,\n    containerStyle: {\n        zIndex: 1031,\n    },\n};\n\nReactDOM.render(\n\n\n    <BrowserRouter>\n        <Provider template={AlertTemplate} {...options}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}