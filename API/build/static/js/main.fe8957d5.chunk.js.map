{"version":3,"sources":["components/authentication/Connect.js","components/authentication/Register.js","components/authentication/Authentication.js","utils/httpMethods.js","components/circuit/CreateCircuitModal.js","components/Menu.js","components/Pin.js","components/Map.js","components/circuit/CircuitListItem.js","components/circuit/CircuitList.js","views/CircuitsView.js","views/Home.js","views/Account.js","components/step/StepListItem.js","components/step/StepList.js","components/step/UpdateStepModal.js","components/circuit/UpdateCircuitModal.js","views/CircuitPublisher.js","views/Achievement.js","views/Todo.js","views/DetailedCircuit.js","App.js","serviceWorker.js","index.js"],"names":["Connect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_this$setState","setState","defineProperty","target","name","value","undefined","handleSubmit","e","preventDefault","login","state","catch","error","console","log","code","text","email","password","_this$state","displayModal","react_default","a","createElement","Form","onSubmit","ModalBody","FormGroup","Label","Input","type","placeholder","onChange","invalid","FormFeedback","ModalFooter","Button","color","onClick","Component","withRouter","Register","firstname","lastname","repeatPassword","concat","match","length","verifpassword","verifrepeatPassword","user","assign","then","data","verifemail","_this$state2","Authentication","previousState","modal","isConnected","registerByDefault","_this2","_this$props","logout","Fragment","Dropdown","nav","toggle","displayDropdownAccount","DropdownToggle","react_fontawesome_index_es","icon","className","DropdownMenu","Link","to","DropdownItem","Modal","isOpen","fade","ModalHeader","authentication_Register","authentication_Connect","React","API_HOST","process","checkStatus","_callee","response","regenerator_default","wrap","_context","prev","next","ok","status","abrupt","Promise","resolve","json","t0","t1","t2","sent","t3","reject","stop","request","route","method","body","options","headers","Content-Type","localStorage","getItem","authorization","JSON","stringify","fetch","httpMethods","get","post","put","delete","CreateCircuitModal","api","history","push","id_circuit","Menu","responsiveNavBarMode","Navbar","expand","fixed","src","alt","NavbarToggler","Collapse","navbar","Nav","caret","divider","Authentication_Authentication","NavItem","circuit_CreateCircuitModal","Pin","index","x","pinStyle","cursor","fill","stroke","height","viewBox","style","objectSpread","d","y","fontSize","PureComponent","Map","viewport","width","window","innerHeight","latitude","longitude","zoom","centerStep","step","navigator","geolocation","getCurrentPosition","coords","userPosition","_this3","steps","circuits","onClickMap","onClickMarker","esm","mapboxApiAccessToken","mapStyle","MAP_STYLE","onViewportChange","offsetLeft","offsetTop","Pin_Pin","map","s","key","id_step","order","c","idx","CircuitListItem","tooltipPublicationOpen","tooltipLevelOpen","publishedStatusToggler","levelToggler","classLevel","description","onHome","duration","version","published","level","Tooltip","placement","autohide","id","CircuitList","_ref","_ref$items","items","item","circuit_CircuitListItem","CircuitsView","dropdownOpen","filter","onFilterClick","componentDidMount","showPublished","ButtonDropdown","direction","element","Home","Map_Map","CircuitsView_CircuitsView","lib_default","onToggle","Account","StepListItem","onClickItem","stepFocus","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","StepList","droppableId","backgroundColor","isDraggingOver","droppableProps","UpdateStepModal","instruction","questions","wording","fetchQuestion","id_question","handleChangeQuestion","persist","displayUpdateStep","alert","updateStep","putQuestion","success","prevProps","question","_this$state$questions","_this$props2","show","removeStep","withAlert","UpdateCircuitModal","displayUpdateCircuit","circuit","updateCircuit","CircuitPublisher","circuitIsDisplayed","stepIsDisplayed","handleClickMap","lngLat","findIndex","splice","dragEnd","dropResult","destination","prevOrder","source","newOrder","changeStepOrder","previous","new","parseInt","sort","b","params","onDragEnd","step_UpdateStepModal","circuit_UpdateCircuitModal","Achievement","Todo","library","add","faUser","faPen","faAlignJustify","App","credentials","setItem","token","removeItem","Menu_Menu","Route","exact","path","component","render","Account_Account","DetailedCircuit","Boolean","location","hostname","timeout","transition","position","positions","TOP_CENTER","containerStyle","zIndex","ReactDOM","BrowserRouter","react_alert","template","AlertTemplate","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe8957d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Button, ModalBody, ModalFooter,\r\n    Form, FormGroup, FormFeedback, Label, Input\r\n} from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Connect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.login('signin', this.state).catch((error) => {\r\n            console.log(error);\r\n            if (error.code === 401)\r\n                this.setState({ error: error.text })\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { email, password, error } = this.state;\r\n        const { displayModal } = this.props;\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <ModalBody>\r\n                    <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <Input\r\n                            type='email'\r\n                            name='email'\r\n                            placeholder='Indiquez votre email'\r\n                            value={email}\r\n                            onChange={this.handleChange}\r\n                            invalid={error}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Mot de passe</Label>\r\n                        <Input\r\n                            type='password'\r\n                            name='password'\r\n                            placeholder='Indiquez votre mot de passe'\r\n                            value={password}\r\n                            onChange={this.handleChange}\r\n                            invalid={error}\r\n                        />\r\n                        <FormFeedback>{error}</FormFeedback>\r\n                    </FormGroup>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={this.handleSubmit}\r\n                    >Connexion\r\n                    </Button>\r\n                    <Button\r\n                        color='secondary'\r\n                        onClick={displayModal}\r\n                    >Annuler\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Connect);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Button, ModalBody, ModalFooter,\r\n    Form, FormGroup, Label, Input, FormFeedback,\r\n} from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            [`verif${event.target.name}`]: undefined,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password,\r\n            repeatPassword,\r\n        } = this.state;\r\n\r\n\r\n        // Vérification du format d'email\r\n        if (!email.match(/^[\\w-.]+@[\\w-]+\\.\\w+$/g)) {\r\n            this.setState({ verifemail: true });\r\n        } else if (password.length < 8) {\r\n            this.setState({ verifpassword: true });\r\n        } else if (repeatPassword !== password) {\r\n            this.setState({ verifrepeatPassword: true });\r\n        } else {\r\n            // Copie du state dans un nouvel objet pour pouvoir supprimer des propriétés\r\n            const user = Object.assign({}, this.state);\r\n            delete user.repeatPassword;\r\n\r\n            this.props.login('signup', user).then((data) => {\r\n                // success\r\n            }).catch((error) => {\r\n                // error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, email, password, repeatPassword,\r\n            verifemail, verifpassword, verifrepeatPassword } = this.state;\r\n        const { displayModal } = this.props;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <ModalBody>\r\n                    <FormGroup>\r\n                        <Label>Nom</Label>\r\n                        <Input\r\n                            type='text'\r\n                            name='lastname'\r\n                            onChange={this.handleChange}\r\n                            value={lastname}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Prénom</Label>\r\n                        <Input\r\n                            type='text'\r\n                            name='firstname'\r\n                            onChange={this.handleChange}\r\n                            value={firstname}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <Input\r\n                            type='email'\r\n                            name='email'\r\n                            onChange={this.handleChange}\r\n                            value={email}\r\n                            invalid={verifemail}\r\n                        />\r\n                        <FormFeedback>Ce n'est pas une adresse valide</FormFeedback>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label>Mot de passe</Label>\r\n                        <Input\r\n                            type='password'\r\n                            name='password'\r\n                            placeholder='8 caractères minimum'\r\n                            onChange={this.handleChange}\r\n                            value={password}\r\n                            invalid={verifpassword}\r\n                        />\r\n                        <FormFeedback>Votre mot de passe doit faire plus de 8 caractères</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input\r\n                            type='password'\r\n                            name='repeatPassword'\r\n                            placeholder='Répétez votre mot de passe'\r\n                            onChange={this.handleChange}\r\n                            value={repeatPassword}\r\n                            invalid={verifrepeatPassword}\r\n                        />\r\n                        <FormFeedback>Vos mots de passes ne correspondent pas</FormFeedback>\r\n                    </FormGroup>\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='primary'\r\n                        type='submit'\r\n                        onClick={this.handleSubmit}\r\n                    >Inscription\r\n                    </Button>\r\n                    <Button\r\n                        color='secondary'\r\n                        onClick={displayModal}\r\n                    >Annuler\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    Modal, ModalHeader, DropdownToggle,\r\n    DropdownMenu, DropdownItem, Dropdown,\r\n} from 'reactstrap';\r\n\r\nimport Connect from './Connect';\r\nimport Register from './Register';\r\n\r\nexport default class Authentication extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { isConnected } = this.props;\r\n        this.state = {\r\n            modal: false,\r\n            registerByDefault: true,\r\n            isConnected: isConnected,\r\n        };\r\n    }\r\n\r\n    displayModal = () => {\r\n        this.setState(previousState => ({\r\n            modal: !previousState.modal,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { isConnected, modal, registerByDefault } = this.state;\r\n        const { login, logout } = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                {isConnected ?\r\n                    <Dropdown\r\n                        nav\r\n                        toggle={this.displayDropdownAccount}\r\n                    >\r\n\r\n                        <DropdownToggle nav>\r\n                            <FontAwesomeIcon icon='user' className='user-icon' />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu className='account-dropdown'>\r\n                            <Link to='/account'>\r\n                                <DropdownItem>Mon compte</DropdownItem>\r\n                            </Link>\r\n                            <Link to='/' onClick={logout}>\r\n                                <DropdownItem>Déconnexion</DropdownItem>\r\n                            </Link>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                    :\r\n                    <>\r\n                        <p onClick={this.displayModal} className='auth-text'>Autentification</p>\r\n\r\n                        <Modal isOpen={modal} fade={false} toggle={this.displayModal}>\r\n\r\n                            <div className='modal-header'>\r\n                                <ModalHeader\r\n                                    className={registerByDefault === true ? 'active' : ''}\r\n                                    onClick={() => this.setState({ registerByDefault: true })}\r\n                                >Inscription\r\n                                </ModalHeader>\r\n                                <ModalHeader\r\n                                    className={registerByDefault === true ? '' : 'active'}\r\n                                    onClick={() => this.setState({ registerByDefault: false })}\r\n                                >Connexion\r\n                                </ModalHeader>\r\n                            </div>\r\n\r\n                            {registerByDefault ?\r\n                                <Register\r\n                                    displayModal={this.displayModal}\r\n                                    modal={modal}\r\n                                    login={login}\r\n                                />\r\n                                :\r\n                                <Connect\r\n                                    displayModal={this.displayModal}\r\n                                    modal={modal}\r\n                                    login={login}\r\n                                />\r\n                            }\r\n                        </Modal>\r\n                    </>\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","const API_HOST = process.env.REACT_APP_API_URL;\r\n\r\n/**\r\n *\r\n * @param {*} response\r\n */\r\nasync function checkStatus(response) {\r\n    if (response.ok) {\r\n        if (response.status === 204) return Promise.resolve();\r\n        return Promise.resolve(response.json());\r\n    }\r\n    return Promise.reject({ code: response.status, text: await response.text() });\r\n}\r\n\r\n\r\n/**\r\n * Fonction d'envoie d'une requête au serveur\r\n * @param {String} route : La route de la requête (sans l'url du serveur)\r\n * @param {String} method : La méthode de la requête\r\n * @param {Object} body : Un objet représentant le body de la requête\r\n */\r\nfunction request(route, method, body) {\r\n    const options = {\r\n        method: method,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    if (localStorage.getItem('token')) {\r\n        options.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\r\n    }\r\n\r\n    if (body) {\r\n        options.body = JSON.stringify(body);\r\n    }\r\n\r\n    return fetch(API_HOST + route, options)\r\n        .then(checkStatus);\r\n}\r\n\r\n\r\nexport default {\r\n    get: route => request(route, 'GET'),\r\n    post: (route, body) => request(route, 'POST', body),\r\n    put: (route, body) => request(route, 'PUT', body),\r\n    delete: route => request(route, 'DELETE'),\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Button, ModalBody, ModalFooter, Form, FormGroup,\r\n    Label, Input, Modal, ModalHeader\r\n} from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport api from '../../utils/httpMethods';\r\n\r\nclass CreateCircuitModal extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const { name } = this.state;\r\n        const { displayModal } = this.props;\r\n        api.post('circuit', {\r\n            name: name,\r\n        }).then((data) => {\r\n            displayModal();\r\n            const { history } = this.props;\r\n            history.push(`/circuit/${data.id_circuit}`);\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        const { modal, displayModal } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Modal\r\n                    isOpen={modal}\r\n                    fade={false}\r\n                    toggle={displayModal}\r\n                >\r\n                    <ModalHeader>Nouveau circuit</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Nom</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='name'\r\n                                    value={name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.handleSubmit}\r\n                        >Créer\r\n                        </Button>\r\n                        <Button\r\n                            color='secondary'\r\n                            onClick={displayModal}\r\n                        >Annuler\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(CreateCircuitModal);\r\n","import React from 'react';\r\nimport {\r\n    Collapse, Navbar, NavbarToggler, Dropdown,\r\n    Nav, NavItem, DropdownMenu, DropdownItem, DropdownToggle,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Authentication from './authentication/Authentication';\r\nimport CreateCircuitModal from './circuit/CreateCircuitModal';\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n    state = {\r\n        responsiveNavBarMode: false,\r\n        modal: false,\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(previousState => ({\r\n            responsiveNavBarMode: !previousState.responsiveNavBarMode,\r\n        }));\r\n    }\r\n\r\n    displayModal = () => {\r\n        this.setState(previousState => ({\r\n            modal: !previousState.modal,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { responsiveNavBarMode, modal } = this.state;\r\n        const { isConnected, login, logout } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Navbar expand='md' fixed='top'>\r\n                    <Link to='/'>\r\n                        <img src='/img/logoGeoScoutWhite.png' className='logo' alt='GeoScout' />\r\n                    </Link>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n\r\n                    {isConnected ?\r\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <Dropdown nav>\r\n                                    <DropdownToggle nav caret>\r\n                                        Circuits\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <Link to='/circuits'>\r\n                                            <DropdownItem>Créés</DropdownItem>\r\n                                        </Link>\r\n                                        <Link to='/achievements'>\r\n                                            <DropdownItem>Réalisés</DropdownItem>\r\n                                        </Link>\r\n                                        <Link to='/todo'>\r\n                                            <DropdownItem>Ma liste</DropdownItem>\r\n                                        </Link>\r\n                                        <DropdownItem divider />\r\n                                        <DropdownItem\r\n                                            onClick={this.displayModal}\r\n                                            className='create-circuit'\r\n                                        >Créer un circuit\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                <Authentication isConnected={isConnected} logout={logout} />\r\n                            </Nav>\r\n                        </Collapse>\r\n\r\n                        :\r\n                        <Collapse responsiveNavBarMode={responsiveNavBarMode} navbar>\r\n                            <Nav className='flex-end' navbar>\r\n                                <NavItem>\r\n                                    <Authentication isConnected={isConnected} login={login} />\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    }\r\n\r\n                </Navbar>\r\n\r\n                <CreateCircuitModal\r\n                    displayModal={this.displayModal}\r\n                    modal={modal}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { PureComponent } from 'react';\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n\r\nexport default class Pin extends PureComponent {\r\n\r\n    render() {\r\n        const { onClick, index } = this.props;\r\n        let x = 8;\r\n\r\n        const pinStyle = {\r\n            cursor: 'pointer',\r\n            fill: this.props.color,\r\n            stroke: 'none',\r\n        };\r\n\r\n        if (index === 11) {\r\n            x = 6;\r\n        } else if (index > 9) {\r\n            x = 5;\r\n        } else if (index === 1 || index === 7) {\r\n            x = 9;\r\n        }\r\n\r\n        return (\r\n            <svg\r\n                height={25}\r\n                viewBox='0 0 24 24'\r\n                style={{ ...pinStyle }}\r\n                onClick={onClick}\r\n            >\r\n                <path d={ICON} />\r\n                <text x={x} y={15} fill='white' fontSize={13}>{index}</text>\r\n\r\n            </svg>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\n\r\nimport Pin from './Pin';\r\nimport MAP_STYLE from '../utils/map-style-basic.json';\r\n\r\n/* Map de création de circuits */\r\nexport default class Map extends React.Component {\r\n\r\n    state = {\r\n        viewport: {\r\n            width: '100%',\r\n            height: window.innerHeight - 50,\r\n            latitude: 48.582651,\r\n            longitude: 7.749534,\r\n            zoom: 12,\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Récupération de la position de l'utilisateur\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((data) => {\r\n                const { viewport } = this.state;\r\n                viewport.latitude = data.coords.latitude;\r\n                viewport.longitude = data.coords.longitude;\r\n\r\n                this.setState({\r\n                    viewport: viewport,\r\n                    userPosition: data.coords,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    centerStep = (step) => {\r\n        const { viewport } = this.state;\r\n        viewport.latitude = step.latitude;\r\n        viewport.longitude = step.longitude + 0.03;\r\n        viewport.zoom = 12;\r\n\r\n        this.setState({\r\n            viewport: viewport,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            steps, circuits, onClickMap, onClickMarker, className,\r\n        } = this.props;\r\n        const { viewport, userPosition } = this.state;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <ReactMapGL\r\n                    mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\r\n                    {...viewport}\r\n                    mapStyle={MAP_STYLE}\r\n                    onViewportChange={viewport => this.setState({ viewport })}\r\n                    onClick={onClickMap}\r\n                >\r\n                    {userPosition &&\r\n                        <Marker\r\n                            latitude={userPosition.latitude}\r\n                            longitude={userPosition.longitude}\r\n                            offsetLeft={-10}\r\n                            offsetTop={-20}\r\n                        >\r\n                            <Pin color='#cc0000' />\r\n                        </Marker>\r\n                    }\r\n                    { /* Affichage des étapes dans le cas de la création/update de circuit */}\r\n                    {steps && steps.map(s => <Marker\r\n                        key={s.id_step}\r\n                        latitude={s.latitude}\r\n                        longitude={s.longitude}\r\n                        offsetLeft={-11}\r\n                        offsetTop={-25}\r\n                    >\r\n                        <Pin\r\n                            color='#1f7a1f'\r\n                            index={s.order}\r\n                            onClick={() => {\r\n                                onClickMarker(s);\r\n                                this.centerStep(s);\r\n                            }}\r\n                        />\r\n                    </Marker>)}\r\n                    { /* Affichage des circuits dans le cas de la map de la homepage */}\r\n                    {circuits && circuits.map((c, idx) => {\r\n                        if (c.latitude && c.longitude) {\r\n                            return (\r\n                                <Marker\r\n                                    key={idx}\r\n                                    latitude={c.latitude}\r\n                                    longitude={c.longitude}\r\n                                    offsetLeft={-11}\r\n                                    offsetTop={-25}\r\n                                >\r\n                                    <Pin color='#0066cc' onClick={() => onClickMarker(c)} />\r\n                                </Marker>\r\n                            );\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </ReactMapGL>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nclass CircuitListItem extends Component {\r\n\r\n    state = {\r\n        tooltipPublicationOpen: false,\r\n        tooltipLevelOpen: false,\r\n    };\r\n\r\n    publishedStatusToggler = () => {\r\n        this.setState({\r\n            tooltipPublicationOpen: !this.state.tooltipPublicationOpen,\r\n        });\r\n    }\r\n\r\n    levelToggler = () => {\r\n        this.setState({\r\n            tooltipLevelOpen: !this.state.tooltipLevelOpen,\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            id_circuit, name, description, length, onHome,\r\n            duration, version, published, level, history,\r\n        } = this.props;\r\n        const { tooltipPublicationOpen, tooltipLevelOpen } = this.state;\r\n\r\n        let classLevel;\r\n        switch (level) {\r\n            case '1':\r\n                classLevel = 'medium';\r\n                break;\r\n            case '2':\r\n                classLevel = 'hard';\r\n                break;\r\n            default:\r\n                classLevel = 'easy';\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <li\r\n                    className='list-item'\r\n                    onClick={() => (onHome ? history.push('detail/') : history.push(`circuit/${id_circuit}`))}\r\n                >\r\n\r\n                    <h3 className='item-name'>{name}</h3>\r\n                    <p>{description && description}</p>\r\n                    <p>{length && `${length} km`}</p>\r\n                    <p>{duration && `${length} heures`}</p>\r\n                    <p className='version-item'>{version && `Version : ${version}`}</p>\r\n\r\n                    {!onHome &&\r\n                        <>\r\n                            <Tooltip\r\n                                placement='top'\r\n                                isOpen={tooltipPublicationOpen}\r\n                                autohide={false}\r\n                                target={`published${id_circuit}`}\r\n                                toggle={this.publishedStatusToggler}\r\n                            >\r\n                                {published === true ? 'Publié' : 'Non-publié'}\r\n                            </Tooltip>\r\n                            <FontAwesomeIcon\r\n                                id={`published${id_circuit}`}\r\n                                icon='align-justify'\r\n                                className='published-item'\r\n                                color={published === true ? '#27ae60' : 'white'}\r\n                            />\r\n                        </>\r\n                    }\r\n                    <Tooltip\r\n                        placement='top'\r\n                        isOpen={tooltipLevelOpen}\r\n                        autohide={false}\r\n                        target={`level${id_circuit}`}\r\n                        toggle={this.levelToggler}\r\n                    >\r\n                        {`Difficulté : ${classLevel}`}\r\n                    </Tooltip>\r\n                    <span className={`level-item ${classLevel}`} id={`level${id_circuit}`} />\r\n\r\n                </li>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(CircuitListItem);\r\n","import React from 'react';\r\nimport CircuitListItem from './CircuitListItem';\r\n\r\nexport default ({ items = [], onHome }) => (\r\n\r\n    <ul className='item-wrapper'>\r\n        {items.map(item => <CircuitListItem key={item.id_circuit} {...item} onHome={onHome} />)}\r\n    </ul>\r\n\r\n);\r\n","import React, { Component } from 'react';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nimport '../css/app.css';\r\nimport CreatedCircuitList from '../components/circuit/CircuitList';\r\n\r\nimport api from '../utils/httpMethods';\r\n\r\nexport default class CircuitsView extends Component {\r\n\r\n    state = {\r\n        dropdownOpen: false,\r\n        filter: 'Tous',\r\n        circuits: [],\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen,\r\n        });\r\n    }\r\n\r\n    onFilterClick = (event) => {\r\n        this.setState({ filter: event.target.name });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        api.get('my-circuits').then((data) => {\r\n            this.setState({ circuits: data });\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const { dropdownOpen, filter, circuits } = this.state;\r\n        const { onHome } = this.props;\r\n        const showPublished = (filter === 'Publiés');\r\n\r\n        return (\r\n            <>\r\n                <div className='my-circuits-header'>\r\n\r\n                    {onHome\r\n                        ?\r\n                        <h1>Circuits environnants</h1>\r\n\r\n                        :\r\n                        <>\r\n                            <h1>Circuits créés</h1>\r\n\r\n                            <div className='header-buttons'>\r\n\r\n                                <ButtonDropdown\r\n                                    direction='left'\r\n                                    className='button-dropdown'\r\n                                    isOpen={dropdownOpen}\r\n                                    toggle={this.toggle}\r\n                                >\r\n                                    <DropdownToggle caret color='info'>{filter}</DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem\r\n                                            name='Tous'\r\n                                            onClick={this.onFilterClick}\r\n                                        >Tous\r\n                                        </DropdownItem>\r\n                                        <DropdownItem\r\n                                            name='Publiés'\r\n                                            onClick={this.onFilterClick}\r\n                                        >Publiés\r\n                                        </DropdownItem>\r\n                                        <DropdownItem\r\n                                            name='Non-publiés'\r\n                                            onClick={this.onFilterClick}\r\n                                        >Non-publiés\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n                {filter === 'Tous' ?\r\n                    <CreatedCircuitList\r\n                        items={circuits}\r\n                        onHome={onHome}\r\n                    />\r\n                    :\r\n                    <CreatedCircuitList\r\n                        items={circuits.filter(element => element.published === (showPublished))}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport ToggleButton from 'react-toggle-button';\r\n\r\nimport Map from '../components/Map';\r\nimport api from '../utils/httpMethods';\r\nimport CircuitsView from './CircuitsView';\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        circuits: [],\r\n        value: false,\r\n        onHome: true,\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        api.get('circuit/nearby').then((data) => {\r\n            this.setState({\r\n                circuits: data,\r\n            });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { circuits, value, onHome } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {value === false\r\n                    ?\r\n                    <Map className='map' circuits={circuits} />\r\n                    :\r\n                    <CircuitsView onHome={onHome} />\r\n                }\r\n\r\n                <div className='toggle-button'>\r\n                    <p>Liste</p>\r\n                    <ToggleButton\r\n                        value={value || false}\r\n                        onToggle={(value) => {\r\n                            this.setState({\r\n                                value: !value,\r\n                            });\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Account extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Mon compte</h1>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport default ({ step, onClickItem, stepFocus }) => (\r\n    <Draggable\r\n        draggableId={step.id_step}\r\n        index={step.order}\r\n    >\r\n        {(provided, snapshot) => (\r\n            <li\r\n                className={`step-wrapper-item ${stepFocus && step.id_step === stepFocus.id_step && 'focus-step'}`}\r\n                onClick={() => onClickItem(step)}\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n            >\r\n\r\n                <div>\r\n                    <span className='step-name'>{step.name}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{step.description}</span>\r\n                </div>\r\n\r\n                <span className='order-item'>{step.order}</span>\r\n\r\n            </li>\r\n        )}\r\n    </Draggable>\r\n);\r\n","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nimport StepListItem from './StepListItem';\r\n\r\nexport default ({ items = [], onClickItem, stepFocus }) => (\r\n    <Droppable droppableId='drop-step' type='STEP'>\r\n        {(provided, snapshot) => (\r\n            <ul\r\n                className='step-wrapper'\r\n                ref={provided.innerRef}\r\n                style={{ backgroundColor: snapshot.isDraggingOver && '#65D8C1' }}\r\n                {...provided.droppableProps}\r\n            >\r\n                {items.map(item => <StepListItem\r\n                    key={item.order}\r\n                    step={item}\r\n                    onClickItem={onClickItem}\r\n                    stepFocus={stepFocus}\r\n                />)}\r\n                {provided.placeholder}\r\n            </ul>\r\n        )}\r\n    </Droppable>\r\n\r\n);\r\n","import React, { Component } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport api from '../../utils/httpMethods';\r\n\r\nclass UpdateStepModal extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        instruction: '',\r\n        questions: { wording: '', response: '' },\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { step } = this.props;\r\n        if (prevProps.step !== step) {\r\n            if (step) {\r\n                this.setState(Object.assign({}, step, {\r\n                    description: step.description || '',\r\n                    instruction: step.instruction || '',\r\n                    questions: step.questions || {\r\n                        wording: '',\r\n                        response: '',\r\n                    },\r\n                }));\r\n                this.fetchQuestion(step.id_step);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchQuestion = (id_step) => {\r\n        api.get(`step/${id_step}/questions`).then((data) => {\r\n            if (data.length > 0) {\r\n                this.setState({\r\n                    questions: {\r\n                        id: data[0].id_question || undefined,\r\n                        wording: data[0].wording || '',\r\n                        response: data[0].response || '',\r\n                    },\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleChangeQuestion = (event) => {\r\n        event.persist();\r\n        this.setState((prev) => {\r\n            prev.questions[event.target.name] = event.target.value;\r\n            return { questions: prev.questions };\r\n        });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const step = this.state;\r\n        const { displayUpdateStep, alert } = this.props;\r\n        this.props.updateStep(step)\r\n            .then(() => {\r\n                this.putQuestion(step.questions);\r\n                displayUpdateStep();\r\n                alert.success('Etape mise à jour');\r\n            })\r\n            .catch(() => alert.error('Oups, une erreur s\\'est produite'));\r\n    }\r\n\r\n    putQuestion(question) {\r\n        if (question.id) {\r\n            return api.put(`question/${question.id}`, question);\r\n        }\r\n        return api.post('question', Object.assign({ id_step: this.state.id_step }, question));\r\n\r\n    }\r\n\r\n    render() {\r\n        const { id_step, name, description, instruction, questions: { wording, response } } = this.state;\r\n        const { show, displayUpdateStep, removeStep } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className={show ? 'update-step' : 'hidden-update-step'}>\r\n                    <div className='update-title'>\r\n                        <h3>{'Modification de l\\'étape'}</h3>\r\n                    </div>\r\n                    <Form className='update-form' onSubmit={e => e.preventDefault()}>\r\n                        <FormGroup>\r\n                            <Label>Nom</Label>\r\n                            <Input\r\n                                type='text'\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Description</Label>\r\n                            <Input\r\n                                type='textarea'\r\n                                name='description'\r\n                                value={description}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Instruction de direction</Label>\r\n                            <Input\r\n                                type='textarea'\r\n                                name='instruction'\r\n                                value={instruction}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Intitulé de la question</Label>\r\n                            <Input\r\n                                type='textarea'\r\n                                name='wording'\r\n                                value={wording}\r\n                                onChange={this.handleChangeQuestion}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Réponse</Label>\r\n                            <Input\r\n                                type='textarea'\r\n                                name='response'\r\n                                value={response}\r\n                                onChange={this.handleChangeQuestion}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <div className='update-buttons'>\r\n                            <Button\r\n                                type='submit'\r\n                                color='info'\r\n                                onClick={this.handleSubmit}\r\n                            >Modifier\r\n                            </Button>\r\n                            <Button\r\n                                color='danger'\r\n                                onClick={() => removeStep(id_step)}\r\n                            >Supprimer\r\n                            </Button>\r\n                            <Button\r\n                                color='secondary'\r\n                                onClick={displayUpdateStep}\r\n                            >Annuler\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withAlert()(UpdateStepModal);\r\n","import React, { Component } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass UpdateCircuitModal extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        length: '',\r\n        duration: '',\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { circuit } = this.props;\r\n        if (prevProps.circuit !== circuit) {\r\n            if (circuit) {\r\n                this.setState(Object.assign({}, circuit, {\r\n                    description: circuit.description || '',\r\n                    instruction: circuit.instruction || '',\r\n                    length: circuit.length || '',\r\n                    duration: circuit.duration || '',\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const { id_circuit, name, description, length, duration } = this.state;\r\n        const { displayUpdateCircuit, alert } = this.props;\r\n        const circuit = {\r\n            id_circuit: id_circuit,\r\n            name: name || null,\r\n            description: description || null,\r\n            length: length || null,\r\n            duration: duration || null,\r\n        };\r\n        this.props.updateCircuit(circuit)\r\n            .then(() => {\r\n                displayUpdateCircuit();\r\n                alert.success('Circuit mis à jour');\r\n            })\r\n            .catch(() => alert.error('Oups, une erreur s\\'est produite'));\r\n    }\r\n\r\n    render() {\r\n        const { name, description, length, duration } = this.state;\r\n        const { show, displayUpdateCircuit } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className={show ? 'update-circuit' : 'hidden-update-circuit'}>\r\n                    <div className='update-title'>\r\n                        <h3>Modification du circuit</h3>\r\n                    </div>\r\n                    <Form className='update-form'>\r\n                        <FormGroup>\r\n                            <Label>Nom</Label>\r\n                            <Input\r\n                                type='text'\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Description</Label>\r\n                            <Input\r\n                                type='textarea'\r\n                                name='description'\r\n                                value={description}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Distance moyenne</Label>\r\n                            <Input\r\n                                type='text'\r\n                                name='length'\r\n                                value={length}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>Durée moyenne</Label>\r\n                            <Input\r\n                                type='text'\r\n                                name='duration'\r\n                                value={duration}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <div className='update-buttons'>\r\n                            <Button\r\n                                color='info'\r\n                                onClick={this.handleSubmit}\r\n                            >Modifier\r\n                            </Button>\r\n                            <Button\r\n                                color='secondary'\r\n                                onClick={displayUpdateCircuit}\r\n                            >Annuler\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withAlert()(UpdateCircuitModal);\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport Map from '../components/Map';\r\nimport StepList from '../components/step/StepList';\r\nimport UpdateStepModal from '../components/step/UpdateStepModal';\r\nimport UpdateCircuitModal from '../components/circuit/UpdateCircuitModal';\r\n\r\nimport api from '../utils/httpMethods';\r\n\r\nexport default class CircuitPublisher extends Component {\r\n\r\n    state = {\r\n        circuit: {},\r\n        steps: [],\r\n        circuitIsDisplayed: false,\r\n        stepIsDisplayed: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        if (id) {\r\n            api.get(`circuit/${id}`).then((circuit) => {\r\n                api.get(`steps/${id}`).then((steps) => {\r\n                    this.setState({\r\n                        circuit: circuit,\r\n                        steps: steps,\r\n                    });\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fonction de gestion du clic sur une étape\r\n     * @param {Object} step : l'objet Step qui a été cliqué\r\n     */\r\n    onClickItem = (step) => {\r\n        this.setState({ stepFocus: step, stepIsDisplayed: true, circuitIsDisplayed: false });\r\n    }\r\n\r\n    /**\r\n     * Création d'une étape dans la base\r\n     * @param {Event} event : event envoyé\r\n     */\r\n    handleClickMap = (event) => {\r\n        const { circuit } = this.state;\r\n        const step = {\r\n            name: 'Etape',\r\n            longitude: event.lngLat[0],\r\n            latitude: event.lngLat[1],\r\n            id_circuit: circuit.id_circuit,\r\n        };\r\n\r\n        api.post('step', step).then((data) => {\r\n            this.setState((prev) => {\r\n                prev.steps.push(data);\r\n                return { steps: prev.steps };\r\n            });\r\n        }).catch(error => console.log(error.text));\r\n    }\r\n\r\n    /**\r\n     * Suppression d'une étape sur le serveur puis dans le state\r\n     * @param {Integer} idx : L'index de l'étape dans le tableau steps du state\r\n     */\r\n    removeStep = (id_step) => {\r\n        api.delete(`step/${id_step}`).then(() => {\r\n            // Suppression de l'étape dans la liste\r\n            this.setState((prev) => {\r\n                const idx = prev.steps.findIndex(element => element.id_step === id_step);\r\n                prev.steps.splice(idx, 1);\r\n                return { steps: prev.steps };\r\n            });\r\n            this.displayUpdateStep();\r\n        }).catch(error => console.log(error.text));\r\n    }\r\n\r\n    /**\r\n     * Modification d'une étape\r\n     * @param {Object} step : L'objet étape modifié\r\n     */\r\n    updateStep = step => api.put(`step/${step.id_step}`, step).then(() => {\r\n        this.setState((prev) => {\r\n            prev.steps.splice(prev.steps.findIndex(s => s.id_step === step.id_step), 1, step);\r\n        });\r\n    })\r\n\r\n    /**\r\n     * Modification du circuit\r\n     * @param {Object} circuit : L'objet circuit modifié\r\n     */\r\n    updateCircuit = circuit => api.put(`circuit/${circuit.id_circuit}`, circuit).then(() => {\r\n        this.setState({\r\n            circuit,\r\n        });\r\n    })\r\n\r\n    displayUpdateCircuit = () => {\r\n        this.setState(previousState => ({\r\n            circuitIsDisplayed: !previousState.circuitIsDisplayed,\r\n            stepIsDisplayed: false,\r\n            stepFocus: null,\r\n        }));\r\n    }\r\n\r\n    displayUpdateStep = () => {\r\n        this.setState(previousState => ({\r\n            stepIsDisplayed: !previousState.stepIsDisplayed,\r\n            circuitIsDisplayed: false,\r\n            stepFocus: null,\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Fonction lancé par le Drag & Drop de la liste d'étape\r\n     * @param {Object} dropResult : Event lancé par le drop d'un Draggable dans un Droppable\r\n     */\r\n    dragEnd = (dropResult) => {\r\n        if (dropResult.destination) {\r\n            const {\r\n                draggableId: id,\r\n                source: {\r\n                    index: prevOrder,\r\n                },\r\n                destination: {\r\n                    index: newOrder,\r\n                },\r\n            } = dropResult;\r\n\r\n\r\n            const { circuit: { id_circuit } } = this.state;\r\n\r\n            this.changeStepOrder(prevOrder, newOrder);\r\n\r\n            api.put('step/order', {\r\n                id: id,\r\n                id_circuit: id_circuit,\r\n                previous: prevOrder,\r\n                new: newOrder,\r\n            })\r\n                .then(() => null)\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    this.changeStepOrder(newOrder, prevOrder);\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fonction de modification de l'ordre des questions dans le state\r\n     * @param {Integer} prevOrder : L'ordre de l'étape à déplacer\r\n     * @param {Integer} newOrder : Le nouvel ordre de l'étape\r\n     */\r\n    changeStepOrder = (prevOrder, newOrder) => {\r\n        this.setState((prev) => {\r\n            const steps = prev.steps.map((step) => {\r\n\r\n                if (step.order === parseInt(prevOrder)) {\r\n                    step.order = newOrder;\r\n                } else if (newOrder <= step.order && step.order < prevOrder) {\r\n                    step.order += 1;\r\n                } else if (step.order > prevOrder && step.order <= newOrder) {\r\n                    step.order -= 1;\r\n                }\r\n\r\n                return step;\r\n            });\r\n            steps.sort((a, b) => a.order - b.order);\r\n            return { steps: steps };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { steps, stepFocus, circuit, circuitIsDisplayed, stepIsDisplayed } = this.state;\r\n\r\n        return (\r\n            <div className='view-wrapper'>\r\n                <Map\r\n                    className='new-map'\r\n                    steps={steps}\r\n                    onClickMap={this.handleClickMap}\r\n                    onClickMarker={this.onClickItem}\r\n                />\r\n\r\n                <div className='scroll-menu'>\r\n\r\n                    <div className='circuit-title'>\r\n                        <h3>{circuit.name}</h3>\r\n                        <Button\r\n                            className='update-circuit-button'\r\n                            onClick={this.displayUpdateCircuit}\r\n                            color='info'\r\n                        >Modifier\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <DragDropContext\r\n                        onDragEnd={this.dragEnd}\r\n                    >\r\n                        <StepList\r\n                            items={steps}\r\n                            onClickItem={this.onClickItem}\r\n                            stepFocus={stepFocus}\r\n                        />\r\n                    </DragDropContext>\r\n\r\n                </div>\r\n                <UpdateStepModal\r\n                    step={stepFocus}\r\n                    removeStep={this.removeStep}\r\n                    updateStep={this.updateStep}\r\n                    show={stepIsDisplayed}\r\n                    displayUpdateStep={this.displayUpdateStep}\r\n                />\r\n\r\n                <UpdateCircuitModal\r\n                    circuit={circuit}\r\n                    show={circuitIsDisplayed}\r\n                    displayUpdateCircuit={this.displayUpdateCircuit}\r\n                    updateCircuit={this.updateCircuit}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Achievement extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Circuits réalisés</h1>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Todo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Ma liste</h1>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <h1>Detail du circuit</h1>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faUser, faPen, faAlignJustify } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './css/app.css';\r\nimport Menu from './components/Menu';\r\n\r\nimport Home from './views/Home';\r\nimport Account from './views/Account';\r\nimport CircuitsView from './views/CircuitsView';\r\nimport CircuitPublisher from './views/CircuitPublisher';\r\nimport Achievement from './views/Achievement';\r\nimport Todo from './views/Todo';\r\nimport DetailedCircuit from './views/DetailedCircuit';\r\n\r\nimport api from './utils/httpMethods';\r\n\r\nlibrary.add(faUser, faPen, faAlignJustify);\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        isConnected: false,\r\n        user: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('token')) {\r\n            api.get('whoami').then((data) => {\r\n                this.setState({ user: data, isConnected: true });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                localStorage.removeItem('token');\r\n            });\r\n        }\r\n    }\r\n\r\n    login = (route, credentials) => api.post(route, credentials).then((data) => {\r\n        localStorage.setItem('token', data.token);\r\n        this.setState({\r\n            isConnected: true,\r\n            user: data.user,\r\n        });\r\n    })\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n        this.setState({\r\n            isConnected: false,\r\n            user: {},\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isConnected, user } = this.state;\r\n        return (\r\n            <>\r\n                <div className='menu-wrapper'>\r\n                    <Menu isConnected={isConnected} login={this.login} logout={this.logout} />\r\n                </div>\r\n\r\n                <Route exact path='/' component={Home} />\r\n                {isConnected ?\r\n                    <>\r\n                        <Route exact path='/account' render={props => <Account {...props} user={user} />} />\r\n                        <Route exact path='/circuits' component={CircuitsView} />\r\n                        <Route exact path='/circuit/:id' component={CircuitPublisher} />\r\n                        <Route exact path='/achievements' component={Achievement} />\r\n                        <Route exact path='/todo' component={Todo} />\r\n                        <Route exact path='/detail' component={DetailedCircuit} />\r\n                    </>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // 'Content is cached for offline use.' message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.',\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { positions, Provider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic';\r\n\r\nimport App from './App';\r\nimport './css/index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst options = {\r\n    timeout: 1500,\r\n    transition: 'fade',\r\n    position: positions.TOP_CENTER,\r\n    containerStyle: {\r\n        zIndex: 1031,\r\n    },\r\n};\r\n\r\nReactDOM.render(\r\n\r\n\r\n    <BrowserRouter>\r\n        <Provider template={AlertTemplate} {...options}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n\r\n    document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}